{
  "nodes": [
    {
      "id": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "label": "Introduction to Programming",
      "cog_level": "Evaluate",
      "title": "Introduction to Programming",
      "description": "Introduction to Programming: ",
      "node_type": "course",
      "shape": "circle",
      "color": {
        "background": "#a3ddf5",
        "border": "#a3ddf5"
      }
    },
    {
      "id": "5630b8d2-0440-4ab5-b688-da832ae3a929",
      "label": "C introduction",
      "cog_level": "Understand",
      "title": "C introduction",
      "description": "C introduction: C introduction: C is a general-purpose, procedural programming language developed by Dennis Ritchie at Bell Labs in the early 1970s.",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "96bb9f87-d756-4a55-ac10-67b6a4f2c980",
      "label": "gcc",
      "cog_level": "Understand",
      "title": "gcc",
      "description": "gcc: gcc: GNU Compiler Collection (gcc) is a suite of compilers for various programming languages, including C, C++, and Fortran.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "bd876a0b-3fff-49d4-be7b-7a2a44629c12",
      "label": "Types",
      "cog_level": "Understand",
      "title": "Types",
      "description": "Types: Types: C supports various data types, including integers, floating-point numbers, characters, and pointers, among others.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "a00f8b32-c98d-41ca-b433-9ee0e7bc0ec2",
      "label": "Variable",
      "cog_level": "Understand",
      "title": "Variable",
      "description": "Variable: Variable: In C, variables are used to store data values.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "58bbfb43-a5d9-47c1-94c1-281a28a0a75b",
      "label": "Branch",
      "cog_level": "Understand",
      "title": "Branch",
      "description": "Branch: Branch: Branching statements in C, such as if-else and switch-case, allow programmers to control the flow of execution based on certain conditions or values.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "85764955-8d32-42f7-9774-5dc135eddc50",
      "label": "Loop",
      "cog_level": "Understand",
      "title": "Loop",
      "description": "Loop: Loop: Loops in C, such as for, while, and do-while, enable repeated execution of a block of code until a specified condition is met. ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "6b7fa4e1-c2fa-4f26-b072-ad96032ab870",
      "label": "Basic ingredients",
      "cog_level": "Understand",
      "title": "Basic ingredients",
      "description": "Basic ingredients: Basic ingredients: In C programming, the basic ingredients include variables, data types, operators, control structures, and functions, which are used to create programs.",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "a7bda781-9178-432b-8394-308acdfc807e",
      "label": "Type conversion",
      "cog_level": "Understand",
      "title": "Type conversion",
      "description": "Type conversion: Type conversion: Type conversion in C refers to the process of converting one data type into another.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "741bbf2d-7bce-4bd1-8394-c27608c39756",
      "label": "Expression",
      "cog_level": "Understand",
      "title": "Expression",
      "description": "Expression: Expression: An expression in C is a combination of variables, constants, operators, and function calls that evaluates to a single value. ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "3d3a4fe1-fc8d-4e7d-950f-b353b488a125",
      "label": "Numerical operation",
      "cog_level": "Understand",
      "title": "Numerical operation",
      "description": "Numerical operation: Numerical operation: Numerical operations in C include arithmetic operations (addition, subtraction, multiplication, division), bitwise operations (AND, OR, XOR), and relational operations (equal to, not equal to, greater than, less than), among others. ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "cba22850-eea8-468f-be2b-89085750282f",
      "label": "CFunction",
      "cog_level": "Understand",
      "title": "CFunction",
      "description": "CFunction: Function: In C, a function is a block of code that performs a specific task. It has a name, a return type, parameters (optional), and a body.",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "5c3411f7-1424-45f7-8553-bda5aa1c39c5",
      "label": "scope",
      "cog_level": "Understand",
      "title": "scope",
      "description": "scope: Scope: Scope refers to the visibility and accessibility of variables within a program. ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "dcea0a6e-0e18-4829-9de9-4e1eda50ce79",
      "label": "lifecycle",
      "cog_level": "Understand",
      "title": "lifecycle",
      "description": "lifecycle: Lifecycle: The lifecycle of a function in C includes its declaration, definition, invocation (calling), execution, and termination. ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "29ee7f78-eedc-49f3-80ba-1652464b3ec7",
      "label": "Control-flow",
      "cog_level": "Understand",
      "title": "Control-flow",
      "description": "Control-flow: Control-flow: Control-flow refers to the order in which statements are executed in a program. In C, control-flow is managed using control structures such as if-else statements, loops (for, while, do-while), switch statements, and function calls. ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "0c012473-0b88-4c7f-adf4-c8dfef522329",
      "label": "Pointer",
      "cog_level": "Understand",
      "title": "Pointer",
      "description": "Pointer: Pointer: A pointer is a variable that stores the memory address of another variable. It allows indirect access to the value stored at that memory address.",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "38b0e7b1-b950-476c-b845-c06e07ead7d5",
      "label": "Pointer variables",
      "cog_level": "Understand",
      "title": "Pointer variables",
      "description": "Pointer variables: Pointer variables: Pointer variables are variables that store memory addresses. They are declared using the * operator, followed by the data type of the variable they are pointing to.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "dbd3173e-1b75-4c4a-a375-038d803b02cc",
      "label": "Arrays and pointers",
      "cog_level": "Understand",
      "title": "Arrays and pointers",
      "description": "Arrays and pointers: Arrays and pointers: In C, arrays and pointers are closely related. When an array name is used in an expression, it decays into a pointer to its first element. This allows arrays to be manipulated using pointer arithmetic.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "3364ab18-88ad-4539-b1fa-df7659e8cefc",
      "label": "Pointers to functions",
      "cog_level": "Understand",
      "title": "Pointers to functions",
      "description": "Pointers to functions: Pointers to functions: Pointers can also point to functions. They enable dynamic function invocation and can be used to implement callbacks and function tables.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "cd669350-36fe-4998-b29d-708528192ba6",
      "label": "Pointers to pointers",
      "cog_level": "Understand",
      "title": "Pointers to pointers",
      "description": "Pointers to pointers: Pointers to pointers: Pointers can also point to other pointers. This allows for the creation of multi-level data structures such as linked lists and trees, where each node contains a pointer to another node.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "e6aa67e1-fd1c-48bc-bc90-e53816dd0dee",
      "label": "Strings and arrays",
      "cog_level": "Understand",
      "title": "Strings and arrays",
      "description": "Strings and arrays: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "2d4cf701-feef-4a5d-aeb4-9066d9b5cf5b",
      "label": "String",
      "cog_level": "Understand",
      "title": "String",
      "description": "String: String: In C, a string is represented as an array of characters terminated by a null character ('\\0'). ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "79be0046-84d5-4d3b-ad4c-edd4c6c52bba",
      "label": "Arrary",
      "cog_level": "Understand",
      "title": "Arrary",
      "description": "Arrary: Array: An array in C is a collection of elements of the same data type stored in contiguous memory locations. Arrays can be one-dimensional or multi-dimensional.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "591e6600-c99a-44c0-8d37-5193bcb1e60b",
      "label": "Array copy",
      "cog_level": "Understand",
      "title": "Array copy",
      "description": "Array copy: Array copy: In C, arrays cannot be directly copied using the assignment operator.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "959dd9b7-8659-4880-8749-ba764b0440b4",
      "label": "Multi dimension array",
      "cog_level": "Understand",
      "title": "Multi dimension array",
      "description": "Multi dimension array: A multi-dimensional array in C is an array with more than one dimension.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "41496693-a6f0-47a9-9de9-a5eb4053daf3",
      "label": "Input and output(I/O)",
      "cog_level": "Understand",
      "title": "Input and output(I/O)",
      "description": "Input and output(I/O): Input and output (I/O): In C, input and output operations are typically performed using the stdio.h library, which provides functions like printf for output and scanf for input.",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "aaaaed85-44ef-4f69-9d0a-b6cd59bbb2d1",
      "label": "Stream",
      "cog_level": "Understand",
      "title": "Stream",
      "description": "Stream: Stream: In C, a stream is an abstraction that represents a source or destination of data, such as a file or the standard input/output (stdin, stdout, stderr).",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "f1e017f3-9ceb-48f3-bf37-38d6479546b1",
      "label": "Error handling",
      "cog_level": "Understand",
      "title": "Error handling",
      "description": "Error handling: Error handling: C provides mechanisms for error handling, including return values from functions, setting errno (error number), and using perror and fprintf(stderr, ...) to output error messages.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "966815c6-0887-4558-b130-7666d4dfbe4e",
      "label": "Self-defined types",
      "cog_level": "Understand",
      "title": "Self-defined types",
      "description": "Self-defined types: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "2efe49a9-c953-4b45-9c4e-cb56b3259b14",
      "label": "Enum",
      "cog_level": "Understand",
      "title": "Enum",
      "description": "Enum: Enum: Enums in C allow you to define a set of named integer constants, providing a way to create symbolic names for integral values.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "487ba9d5-c2a0-4f7c-a8cd-b7e7b2d91e7f",
      "label": "Union",
      "cog_level": "Understand",
      "title": "Union",
      "description": "Union: Union: Unions in C allow you to define a data type that can hold values of different types in the same memory location. Only one member of the union can be used at a time.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "63bf43c7-3a76-40e3-8fee-6a1fddac30ac",
      "label": "Struct",
      "cog_level": "Understand",
      "title": "Struct",
      "description": "Struct: Struct: Structs in C allow you to create composite data types by grouping together variables of different types under a single name. ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "30a35ef1-ee91-45a4-9ed8-44bed6c85fe8",
      "label": "Memory",
      "cog_level": "Understand",
      "title": "Memory",
      "description": "Memory: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "b2d6ddcf-4d64-4219-9263-0b6379f295e4",
      "label": "Static",
      "cog_level": "Understand",
      "title": "Static",
      "description": "Static: Static Memory: Static memory refers to a region of memory where variables are allocated for the entire duration of the program execution. Variables declared as static within functions retain their values between function calls.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "8534593e-a920-420e-8405-ea87ce1b427c",
      "label": "Global",
      "cog_level": "Understand",
      "title": "Global",
      "description": "Global: Global Memory: Global memory refers to a region of memory where variables are allocated for the entire duration of the program execution and can be accessed from any part of the program.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "01416b9f-9ea9-4a50-b1be-ac86b36af8eb",
      "label": "Program module",
      "cog_level": "Understand",
      "title": "Program module",
      "description": "Program module: Program Module: A program module is a discrete unit of software that performs a specific function or task within a larger software system.",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "5b89164a-2c68-4f21-8d4f-837f2a5138b7",
      "label": "Modulization",
      "cog_level": "Understand",
      "title": "Modulization",
      "description": "Modulization: Modularization: Modularization is the process of breaking down a software system into smaller, manageable modules or components.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "7d2249c8-c4f6-4fe1-aa17-9b2dfa450f5d",
      "label": "Link",
      "cog_level": "Understand",
      "title": "Link",
      "description": "Link: Link: Linking is the process of combining multiple object files generated by the compiler into a single executable program.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "943eed6f-bcf5-42d8-a4d6-c425c45ce257",
      "label": "Library",
      "cog_level": "Understand",
      "title": "Library",
      "description": "Library: Library: A library is a collection of precompiled routines, functions, and procedures that can be used by a software program.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "e7e630f2-b493-424c-897c-eed04e388d1b",
      "label": "C++ introduction",
      "cog_level": "Understand",
      "title": "C++ introduction",
      "description": "C++ introduction: C++ Introduction: C++ is a general-purpose programming language developed as an extension of the C programming language.",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "bb537ac7-27ad-4993-bc75-74d791638620",
      "label": "Constructor",
      "cog_level": "Understand",
      "title": "Constructor",
      "description": "Constructor: Constructor: Constructors are special member functions in a class that are automatically called when an object of that class is created. ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "d25ed680-b2bf-470e-9a56-4369fd66090a",
      "label": "Type hierarhy",
      "cog_level": "Understand",
      "title": "Type hierarhy",
      "description": "Type hierarhy: Type Hierarchy: In C++, the type hierarchy refers to the relationship between different types, including base classes and derived classes in inheritance hierarchies.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "44117893-a892-4619-a468-275e39434183",
      "label": "Tempalte",
      "cog_level": "Understand",
      "title": "Tempalte",
      "description": "Tempalte: Template: Templates in C++ allow for generic programming by enabling the creation of functions and classes that operate on data types that are not specified until the template is instantiated. ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "6b579019-22c6-4e65-9223-3cf31e9ec2aa",
      "label": "Debug",
      "cog_level": "Understand",
      "title": "Debug",
      "description": "Debug: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "cadf7a02-7631-4637-a02e-82eef169bcef",
      "label": "Principles",
      "cog_level": "Understand",
      "title": "Principles",
      "description": "Principles: Debug Principles: Debugging involves identifying and fixing errors, or bugs, in software. Principles include understanding the problem, isolating the cause, making changes systematically, and testing thoroughly.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "967f6225-6703-4ab1-91ea-ade49bb2e00b",
      "label": "Tools",
      "cog_level": "Understand",
      "title": "Tools",
      "description": "Tools: Debug Tools: Debugging tools help developers identify and fix errors in code. ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    }
  ],
  "edges": [
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "5630b8d2-0440-4ab5-b688-da832ae3a929",
      "title": "",
      "id": "9cca0f46-7ab9-4b00-b4a3-6f5be83264d8"
    },
    {
      "from": "5630b8d2-0440-4ab5-b688-da832ae3a929",
      "to": "96bb9f87-d756-4a55-ac10-67b6a4f2c980",
      "title": "",
      "id": "c0e46ae6-f419-496c-9b5f-151ba8e28282"
    },
    {
      "from": "5630b8d2-0440-4ab5-b688-da832ae3a929",
      "to": "bd876a0b-3fff-49d4-be7b-7a2a44629c12",
      "title": "",
      "id": "507fafdf-c175-42e7-b5a4-5969ba7c8c04"
    },
    {
      "from": "5630b8d2-0440-4ab5-b688-da832ae3a929",
      "to": "a00f8b32-c98d-41ca-b433-9ee0e7bc0ec2",
      "title": "",
      "id": "0c608227-a3ec-44f9-88bb-4cb333c13180"
    },
    {
      "from": "5630b8d2-0440-4ab5-b688-da832ae3a929",
      "to": "58bbfb43-a5d9-47c1-94c1-281a28a0a75b",
      "title": "",
      "id": "9756722e-b823-4b16-95da-a248fd5883d2"
    },
    {
      "from": "5630b8d2-0440-4ab5-b688-da832ae3a929",
      "to": "85764955-8d32-42f7-9774-5dc135eddc50",
      "title": "",
      "id": "ece258e3-4ace-4d4f-9918-c8e7c8969bee"
    },
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "6b7fa4e1-c2fa-4f26-b072-ad96032ab870",
      "title": "",
      "id": "b467749b-ba19-4f19-9fcb-63ded02ab327"
    },
    {
      "from": "6b7fa4e1-c2fa-4f26-b072-ad96032ab870",
      "to": "a7bda781-9178-432b-8394-308acdfc807e",
      "title": "",
      "id": "7c33bcb4-a511-4be2-a025-3c6ba2870335"
    },
    {
      "from": "6b7fa4e1-c2fa-4f26-b072-ad96032ab870",
      "to": "741bbf2d-7bce-4bd1-8394-c27608c39756",
      "title": "",
      "id": "6eb89fb4-0cf0-4eea-874d-102230ffa5fe"
    },
    {
      "from": "6b7fa4e1-c2fa-4f26-b072-ad96032ab870",
      "to": "3d3a4fe1-fc8d-4e7d-950f-b353b488a125",
      "title": "",
      "id": "9a519509-9575-4461-b157-a541db5a79ec"
    },
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "cba22850-eea8-468f-be2b-89085750282f",
      "title": "",
      "id": "13f18052-8353-498b-bf39-b84f44580fe6"
    },
    {
      "from": "cba22850-eea8-468f-be2b-89085750282f",
      "to": "5c3411f7-1424-45f7-8553-bda5aa1c39c5",
      "title": "",
      "id": "6d04ca33-825c-46e0-8ada-cf190eb00b3c"
    },
    {
      "from": "cba22850-eea8-468f-be2b-89085750282f",
      "to": "dcea0a6e-0e18-4829-9de9-4e1eda50ce79",
      "title": "",
      "id": "8103779e-6173-4ff1-980e-fd399fd39833"
    },
    {
      "from": "cba22850-eea8-468f-be2b-89085750282f",
      "to": "29ee7f78-eedc-49f3-80ba-1652464b3ec7",
      "title": "",
      "id": "d603f23b-e2fc-4255-baf8-7f67e8289b95"
    },
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "0c012473-0b88-4c7f-adf4-c8dfef522329",
      "title": "",
      "id": "050f4636-7f24-4d94-8f1b-7b255d91d1ff"
    },
    {
      "from": "0c012473-0b88-4c7f-adf4-c8dfef522329",
      "to": "38b0e7b1-b950-476c-b845-c06e07ead7d5",
      "title": "",
      "id": "7d0f91a9-d20c-4282-99d8-ed4d8a7a3f66"
    },
    {
      "from": "0c012473-0b88-4c7f-adf4-c8dfef522329",
      "to": "dbd3173e-1b75-4c4a-a375-038d803b02cc",
      "title": "",
      "id": "d85fc226-851b-4ef9-acc9-687dc9d8ad17"
    },
    {
      "from": "0c012473-0b88-4c7f-adf4-c8dfef522329",
      "to": "3364ab18-88ad-4539-b1fa-df7659e8cefc",
      "title": "",
      "id": "153f1bd3-c338-4a48-a529-0d715732e975"
    },
    {
      "from": "0c012473-0b88-4c7f-adf4-c8dfef522329",
      "to": "cd669350-36fe-4998-b29d-708528192ba6",
      "title": "",
      "id": "294070b3-a959-4f40-add1-882c7ac404c9"
    },
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "e6aa67e1-fd1c-48bc-bc90-e53816dd0dee",
      "title": "",
      "id": "75c5a6cd-9155-49bd-83b6-88798be885a1"
    },
    {
      "from": "e6aa67e1-fd1c-48bc-bc90-e53816dd0dee",
      "to": "2d4cf701-feef-4a5d-aeb4-9066d9b5cf5b",
      "title": "",
      "id": "0de4123f-d696-48fe-b7d0-e36009415dcc"
    },
    {
      "from": "e6aa67e1-fd1c-48bc-bc90-e53816dd0dee",
      "to": "79be0046-84d5-4d3b-ad4c-edd4c6c52bba",
      "title": "",
      "id": "7c3c0432-d9ec-49d3-872e-e8d4841b23fb"
    },
    {
      "from": "79be0046-84d5-4d3b-ad4c-edd4c6c52bba",
      "to": "591e6600-c99a-44c0-8d37-5193bcb1e60b",
      "title": "",
      "id": "357244b8-67e7-45a5-8f65-1c7a99dea1cd"
    },
    {
      "from": "79be0046-84d5-4d3b-ad4c-edd4c6c52bba",
      "to": "959dd9b7-8659-4880-8749-ba764b0440b4",
      "title": "",
      "id": "2c309b49-2800-4c8f-af98-2d94570c236b"
    },
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "41496693-a6f0-47a9-9de9-a5eb4053daf3",
      "title": "",
      "id": "206ed660-e3d6-4eed-b005-e3685d42f899"
    },
    {
      "from": "41496693-a6f0-47a9-9de9-a5eb4053daf3",
      "to": "aaaaed85-44ef-4f69-9d0a-b6cd59bbb2d1",
      "title": "",
      "id": "bb6ced63-1bde-4bfc-8071-0bf390a2e3dd"
    },
    {
      "from": "41496693-a6f0-47a9-9de9-a5eb4053daf3",
      "to": "f1e017f3-9ceb-48f3-bf37-38d6479546b1",
      "title": "",
      "id": "2adeacfe-ed15-4985-aa04-7a7207062055"
    },
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "966815c6-0887-4558-b130-7666d4dfbe4e",
      "title": "",
      "id": "11c02260-cd41-4e41-982e-971d72490442"
    },
    {
      "from": "966815c6-0887-4558-b130-7666d4dfbe4e",
      "to": "2efe49a9-c953-4b45-9c4e-cb56b3259b14",
      "title": "",
      "id": "d5296fe2-8170-4dc3-be7c-d287757070c6"
    },
    {
      "from": "966815c6-0887-4558-b130-7666d4dfbe4e",
      "to": "487ba9d5-c2a0-4f7c-a8cd-b7e7b2d91e7f",
      "title": "",
      "id": "0ebaf7e6-137f-4286-a34e-b0b3a6408c17"
    },
    {
      "from": "966815c6-0887-4558-b130-7666d4dfbe4e",
      "to": "63bf43c7-3a76-40e3-8fee-6a1fddac30ac",
      "title": "",
      "id": "f9843642-b709-48e4-bc19-4fa023f7b298"
    },
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "30a35ef1-ee91-45a4-9ed8-44bed6c85fe8",
      "title": "",
      "id": "be828baf-e6ad-43c6-a230-2f2570cf8415"
    },
    {
      "from": "30a35ef1-ee91-45a4-9ed8-44bed6c85fe8",
      "to": "b2d6ddcf-4d64-4219-9263-0b6379f295e4",
      "title": "",
      "id": "4c9480a3-5389-487f-b842-e05bba964b0e"
    },
    {
      "from": "30a35ef1-ee91-45a4-9ed8-44bed6c85fe8",
      "to": "8534593e-a920-420e-8405-ea87ce1b427c",
      "title": "",
      "id": "de7fe0ae-1e8e-492f-a999-37ed9eaa795f"
    },
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "01416b9f-9ea9-4a50-b1be-ac86b36af8eb",
      "title": "",
      "id": "10bc04c3-4a04-4ec3-9d60-ec981319ae74"
    },
    {
      "from": "01416b9f-9ea9-4a50-b1be-ac86b36af8eb",
      "to": "5b89164a-2c68-4f21-8d4f-837f2a5138b7",
      "title": "",
      "id": "10cf4701-f58c-4139-91b6-a1cabb100648"
    },
    {
      "from": "01416b9f-9ea9-4a50-b1be-ac86b36af8eb",
      "to": "7d2249c8-c4f6-4fe1-aa17-9b2dfa450f5d",
      "title": "",
      "id": "8790436a-46bc-4762-9373-3abfb6a2ba09"
    },
    {
      "from": "01416b9f-9ea9-4a50-b1be-ac86b36af8eb",
      "to": "943eed6f-bcf5-42d8-a4d6-c425c45ce257",
      "title": "",
      "id": "3b33ea22-a5cb-4dee-9386-c0f61de29119"
    },
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "e7e630f2-b493-424c-897c-eed04e388d1b",
      "title": "",
      "id": "b061a182-5418-449b-ae0b-671bfa35526a"
    },
    {
      "from": "e7e630f2-b493-424c-897c-eed04e388d1b",
      "to": "bb537ac7-27ad-4993-bc75-74d791638620",
      "title": "",
      "id": "fbcabc91-7e0d-41f7-8da8-5652c541fe34"
    },
    {
      "from": "e7e630f2-b493-424c-897c-eed04e388d1b",
      "to": "d25ed680-b2bf-470e-9a56-4369fd66090a",
      "title": "",
      "id": "98cb49e0-a144-4b06-adf7-31769a5e6a78"
    },
    {
      "from": "e7e630f2-b493-424c-897c-eed04e388d1b",
      "to": "44117893-a892-4619-a468-275e39434183",
      "title": "",
      "id": "5c00ab46-fbc5-4973-9000-a9a487536a6f"
    },
    {
      "from": "6933b24e-57c5-465d-b4bd-e3d4fb55131d",
      "to": "6b579019-22c6-4e65-9223-3cf31e9ec2aa",
      "title": "",
      "id": "7c83a167-7375-4bd2-9373-5f6a36ea9d1e"
    },
    {
      "from": "6b579019-22c6-4e65-9223-3cf31e9ec2aa",
      "to": "cadf7a02-7631-4637-a02e-82eef169bcef",
      "title": "",
      "id": "deb36222-1633-44b1-a719-91defc9ac687"
    },
    {
      "from": "6b579019-22c6-4e65-9223-3cf31e9ec2aa",
      "to": "967f6225-6703-4ab1-91ea-ade49bb2e00b",
      "title": "",
      "id": "c64ab5b3-b328-48f2-8b05-57c2c8c47458"
    }
  ]
}