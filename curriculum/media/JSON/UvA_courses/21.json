{
  "nodes": [
    {
      "id": "fdacf18f-9db8-4942-92bf-f7b27fb81956",
      "label": "Compiler Construction",
      "cog_level": "Understand",
      "title": "Compiler Construction",
      "description": "Compiler Construction: ",
      "node_type": "course",
      "shape": "circle",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "56b90c37-f613-4ab4-b7cd-44e4ac278c8c",
      "label": "Introduction",
      "cog_level": "Understand",
      "title": "Introduction",
      "description": "Introduction: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "6be89477-1a23-4439-80d7-900fecc0afa4",
      "label": "Compiler Introduction",
      "cog_level": "Understand",
      "title": "Compiler Introduction",
      "description": "Compiler Introduction: Compiler Introduction: A compiler is a program that translates source code written in a high-level programming language into machine code that a computer can execute.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "744183a0-e96d-448f-aff0-6d5a1af34329",
      "label": "Compiler and Interpreter",
      "cog_level": "Understand",
      "title": "Compiler and Interpreter",
      "description": "Compiler and Interpreter: Compiler and Interpreter: While compilers translate entire source code files into machine code before execution, interpreters execute code line by line, translating and executing each line at runtime.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "7bd3b2df-637d-45bc-9969-50f765644aa1",
      "label": "Just-in-Time Compilation",
      "cog_level": "Understand",
      "title": "Just-in-Time Compilation",
      "description": "Just-in-Time Compilation: Just-in-Time Compilation: Just-in-Time (JIT) compilation combines aspects of both compilation and interpretation.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "df0f0e86-770b-43df-a896-9dfe011d50fb",
      "label": "Fundamental Principle of Compilation",
      "cog_level": "Understand",
      "title": "Fundamental Principle of Compilation",
      "description": "Fundamental Principle of Compilation: Fundamental Principle of Compilation: The fundamental principle of compilation is to translate code from a high-level programming language into a lower-level representation, typically machine code or bytecode, while preserving the semantics and functionality of the original code.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "9405d7df-5fce-42c1-a178-b1b7f6f558ee",
      "label": "Compiler Tool Chain",
      "cog_level": "Understand",
      "title": "Compiler Tool Chain",
      "description": "Compiler Tool Chain: Compiler Tool Chain: The compiler tool chain refers to the sequence of tools involved in the compilation process, including the preprocessor, compiler, assembler, linker, and loader.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "aac9654e-0fe1-4f6e-9530-58cdff5fe6e1",
      "label": "Compiler: The User\u2019s View",
      "cog_level": "Understand",
      "title": "Compiler: The User\u2019s View",
      "description": "Compiler: The User\u2019s View: Compiler: The User\u2019s View: From the user's perspective, a compiler is a software tool that takes source code written in a high-level programming language, such as C, C++, or Java, and translates it into executable machine code.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "139a1009-1210-4808-800a-7b0f0d24845d",
      "label": "Compiler Structure",
      "cog_level": "Understand",
      "title": "Compiler Structure",
      "description": "Compiler Structure: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "5378674b-1d4c-4017-ae9b-a9affb3ce6af",
      "label": "Basic Compiler Structure",
      "cog_level": "Understand",
      "title": "Basic Compiler Structure",
      "description": "Basic Compiler Structure: ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "211215d6-1292-4967-b265-0a8d176fc808",
      "label": "Front end",
      "cog_level": "Understand",
      "title": "Front end",
      "description": "Front end: Front end: The front end of a compiler is responsible for analyzing and processing the source code. It includes components like lexical analysis, syntactic analysis, and semantic analysis.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "ec79d939-d0eb-4010-bf7c-c5c0cfbb0fc3",
      "label": "Back end",
      "cog_level": "Understand",
      "title": "Back end",
      "description": "Back end: Back end: The back end of a compiler generates target code or intermediate code based on the analyzed source code. It involves tasks such as code optimization and code generation.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "95792823-9b42-477b-a3f2-d55e4efb2af2",
      "label": "Advanced Compiler Structure",
      "cog_level": "Understand",
      "title": "Advanced Compiler Structure",
      "description": "Advanced Compiler Structure: ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "77e8262c-7ca6-4747-8af1-bd702c9aaf68",
      "label": "Front end",
      "cog_level": "Understand",
      "title": "Front end",
      "description": "Front end: ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "0d9073dd-1f58-42ba-9fea-80d6fd55352a",
      "label": "Lexicographic analysis:Scanner",
      "cog_level": "Understand",
      "title": "Lexicographic analysis:Scanner",
      "description": "Lexicographic analysis:Scanner: Lexicographic analysis (Scanner): The scanner reads the input source code character by character and converts it into tokens or lexemes.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "f4610d65-f258-49dc-a554-59131ca02e39",
      "label": "Syntactic analysis:Parser",
      "cog_level": "Understand",
      "title": "Syntactic analysis:Parser",
      "description": "Syntactic analysis:Parser: Syntactic analysis (Parser): The parser analyzes the structure of the source code based on the grammar rules of the programming language.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "d2dec9ce-c02b-43aa-ba5c-292e98885b87",
      "label": "Semantic analysis",
      "cog_level": "Understand",
      "title": "Semantic analysis",
      "description": "Semantic analysis: Semantic analysis: The semantic analyzer performs type checking and ensures that the source code follows the language's semantic rules.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "9202ce69-9cf3-4cf8-863f-b7e17e9a10f3",
      "label": "Optimiser (Middle end)",
      "cog_level": "Understand",
      "title": "Optimiser (Middle end)",
      "description": "Optimiser (Middle end): Optimiser (Middle end): The optimizer optimizes the intermediate code generated by the front end. It includes prologue optimizations, cycle optimizations, and epilogue optimizations.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "41d4faab-39ce-41bf-9a2c-5dbef6a5fe4d",
      "label": "Prologue optimisations:",
      "cog_level": "Understand",
      "title": "Prologue optimisations:",
      "description": "Prologue optimisations:: Prologue optimizations: Optimizations applied at the beginning of a function or subroutine.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "eea6f465-4cf0-4e1d-ad56-9c49bb2c44d1",
      "label": "Cycle optimisations:",
      "cog_level": "Understand",
      "title": "Cycle optimisations:",
      "description": "Cycle optimisations:: Cycle optimizations: Optimizations aimed at reducing the number of machine instructions or cycles required to execute code.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "1da662cb-0504-4348-a590-95c133f65234",
      "label": "Epilogue optimisations:",
      "cog_level": "Understand",
      "title": "Epilogue optimisations:",
      "description": "Epilogue optimisations:: Epilogue optimizations: Optimizations applied at the end of a function or subroutine.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "a3685ce1-41f9-4e4a-9770-7b4d8f13f19c",
      "label": "Back end",
      "cog_level": "Understand",
      "title": "Back end",
      "description": "Back end: ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "bc4ee3e1-fe88-4066-85f3-8e4566e5c871",
      "label": "Instruction selector:",
      "cog_level": "Understand",
      "title": "Instruction selector:",
      "description": "Instruction selector:: Instruction selector: Selects the instructions from the instruction set architecture (ISA) that best match the intermediate code.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "e5a241c5-6373-4770-82bc-9c5c413b2a41",
      "label": "Register allocator\uff1a",
      "cog_level": "Understand",
      "title": "Register allocator\uff1a",
      "description": "Register allocator\uff1a: Register allocator: Allocates physical registers to variables and ensures efficient use of available registers.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "4d4146d1-4100-44c0-bedc-ca4fa1fb5fdb",
      "label": "Instruction scheduler\uff1a",
      "cog_level": "Understand",
      "title": "Instruction scheduler\uff1a",
      "description": "Instruction scheduler\uff1a: Instruction scheduler: Reorders instructions to optimize execution time or resource utilization on the target architecture.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "ddc2cf59-b74a-4891-881d-ebe3cb3fef0a",
      "label": "Lexicographical Analysis",
      "cog_level": "Understand",
      "title": "Lexicographical Analysis",
      "description": "Lexicographical Analysis: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "418b1b1e-1697-4326-88ea-a6f4fb735751",
      "label": "Finite Automata",
      "cog_level": "Understand",
      "title": "Finite Automata",
      "description": "Finite Automata: ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "55ca8ed6-f7a7-41fe-8239-3f41e29ac5fb",
      "label": "A deterministic finite automaton",
      "cog_level": "Understand",
      "title": "A deterministic finite automaton",
      "description": "A deterministic finite automaton: A deterministic finite automaton (DFA) is a mathematical model of computation consisting of a finite set of states, a finite set of input symbols, a transition function, and a start state and one or more accepting states.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "20020277-6685-4c51-be06-2f7c0905d353",
      "label": "A non-deterministic finite automaton",
      "cog_level": "Understand",
      "title": "A non-deterministic finite automaton",
      "description": "A non-deterministic finite automaton: A non-deterministic finite automaton (NFA) is similar to a DFA, but it allows multiple transitions from a state on the same input symbol and can have \u03b5-transitions.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "5aa5299a-7b22-4e3b-b947-ecf43751b3d7",
      "label": "Construct an efficient finite automaton",
      "cog_level": "Understand",
      "title": "Construct an efficient finite automaton",
      "description": "Construct an efficient finite automaton: To construct an efficient finite automaton, one can use algorithms like Subset Construction or Hopcroft\u2019s Algorithm to minimize the number of states and transitions while preserving the language accepted by the automaton.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "caf9cba6-098a-41a0-a248-4ce127ab27a4",
      "label": "Regular Expressions",
      "cog_level": "Understand",
      "title": "Regular Expressions",
      "description": "Regular Expressions: Regular expressions are formal descriptions for patterns of strings. They can be used to describe sets of strings using a compact and expressive syntax.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "807b6199-3852-4685-b5e8-17bc8ae5ea60",
      "label": "Thompson Construction",
      "cog_level": "Understand",
      "title": "Thompson Construction",
      "description": "Thompson Construction: Thompson Construction is a method for converting a regular expression into an equivalent NFA.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "5547bf85-00c5-4992-ad7b-c424ac5d8253",
      "label": "Subset Construction",
      "cog_level": "Understand",
      "title": "Subset Construction",
      "description": "Subset Construction: Subset Construction is an algorithm used to convert an NFA into a DFA, resulting in a more efficient deterministic automaton.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "08112abc-aa2c-4733-a895-0e460acd2eb8",
      "label": "Hopcroft\u2019s Algorithm",
      "cog_level": "Understand",
      "title": "Hopcroft\u2019s Algorithm",
      "description": "Hopcroft\u2019s Algorithm: Hopcroft\u2019s Algorithm is a method for minimizing the number of states in a DFA by partitioning the states into equivalence classes and merging equivalent states.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "7ce5b1cc-03f9-4b60-9319-6ba29f8c5533",
      "label": "Construct scanner",
      "cog_level": "Understand",
      "title": "Construct scanner",
      "description": "Construct scanner: Scanners, also known as lexers, are programs that recognize lexical patterns in input streams. They are commonly used as the first phase of a compiler.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "67624e2d-ffc4-4964-b0fe-9ac8fe90211c",
      "label": "Table-driven scanner",
      "cog_level": "Understand",
      "title": "Table-driven scanner",
      "description": "Table-driven scanner: A table-driven scanner uses finite automata to recognize tokens.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "43657b25-d858-4114-83f1-5d3b6d280fe8",
      "label": "Direct-coded scanner",
      "cog_level": "Understand",
      "title": "Direct-coded scanner",
      "description": "Direct-coded scanner: A direct-coded scanner uses explicit code to recognize tokens.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "08c89033-ec64-412d-89b4-62a2d548a80a",
      "label": "Automatic Scanner Generation with (F)Lex",
      "cog_level": "Understand",
      "title": "Automatic Scanner Generation with (F)Lex",
      "description": "Automatic Scanner Generation with (F)Lex: (F)Lex is a popular tool for generating scanners automatically from lexical specifications written in regular expressions.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "7f009238-ebd3-4de2-86f5-84f03388b011",
      "label": "Syntactic Analysis",
      "cog_level": "Understand",
      "title": "Syntactic Analysis",
      "description": "Syntactic Analysis: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "d6c0ad73-e48b-4442-a409-5cecd4062155",
      "label": "Backus-Naur Form",
      "cog_level": "Understand",
      "title": "Backus-Naur Form",
      "description": "Backus-Naur Form: BNF is a notation technique used to formally describe the syntax of programming languages or other formal languages.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "c664b70f-bbab-47d9-967e-7a60fbe83b4c",
      "label": "Context-Free Grammars",
      "cog_level": "Understand",
      "title": "Context-Free Grammars",
      "description": "Context-Free Grammars: CFG is a formal grammar type used to describe the syntax of context-free languages.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "f2ef797f-681a-4d22-b463-b33489a9a425",
      "label": "Parser generator formalisms",
      "cog_level": "Understand",
      "title": "Parser generator formalisms",
      "description": "Parser generator formalisms: Parser generator tools like YACC (Yet Another Compiler Compiler) are used to automatically generate parsers from formal grammar specifications.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "bbee288c-3810-401b-b11c-41f1b68389d5",
      "label": "Yet Another Compiler Compiler(YACC)",
      "cog_level": "Understand",
      "title": "Yet Another Compiler Compiler(YACC)",
      "description": "Yet Another Compiler Compiler(YACC): YACC is a widely-used parser generator tool originally developed for Unix systems.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "6637340e-bfda-4030-a562-4ae7bb312e47",
      "label": "Abstract syntax definitions",
      "cog_level": "Understand",
      "title": "Abstract syntax definitions",
      "description": "Abstract syntax definitions: Abstract syntax definitions provide a structured representation of the syntax of a programming language or other formal language.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "d1def708-d1f9-4368-8e9b-7c5698910fdf",
      "label": "Semantic Analysis",
      "cog_level": "Understand",
      "title": "Semantic Analysis",
      "description": "Semantic Analysis: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "65ff934e-269f-4423-aaf8-2927da684a21",
      "label": "Context Analysis",
      "cog_level": "Understand",
      "title": "Context Analysis",
      "description": "Context Analysis: Context analysis, also known as semantic analysis, is the phase in the compilation process where the compiler checks the semantics of the program beyond its syntactic correctness.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "4ce93309-a271-4ebd-a10e-3f861fdbdf90",
      "label": "Type checker",
      "cog_level": "Understand",
      "title": "Type checker",
      "description": "Type checker: The type checker is a crucial component of semantic analysis responsible for ensuring that the types of expressions and variables in the program are used in a manner consistent with the language's type system.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "5b07fe6f-4ee4-4f83-a06d-391bacd01c95",
      "label": "Code Transformation & Optimisation",
      "cog_level": "Understand",
      "title": "Code Transformation & Optimisation",
      "description": "Code Transformation & Optimisation: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "9a586954-fc98-4306-a18e-01d36372f6e2",
      "label": "Machine-Independent Optimisation",
      "cog_level": "Understand",
      "title": "Machine-Independent Optimisation",
      "description": "Machine-Independent Optimisation: This involves optimizations that are not specific to any particular hardware architecture",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "8064aef4-928e-4279-b98d-ec4adcf2dc3c",
      "label": "A Taxonomy of Optimisations",
      "cog_level": "Understand",
      "title": "A Taxonomy of Optimisations",
      "description": "A Taxonomy of Optimisations: Optimizations can be categorized based on various criteria such as the scope of optimization (local or global), the level of abstraction (high-level or low-level), and the nature of transformations (restructuring, redundancy elimination, etc.).",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "6483777d-298a-484e-b1b1-683d0f7b00e6",
      "label": "Local Optimisation",
      "cog_level": "Understand",
      "title": "Local Optimisation",
      "description": "Local Optimisation: Local optimization targets small code segments or individual basic blocks within a program",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "f8d7e6cf-824f-4a47-baf1-fb3b35fd271f",
      "label": "Intra-procedural optimisation",
      "cog_level": "Understand",
      "title": "Intra-procedural optimisation",
      "description": "Intra-procedural optimisation: This optimization focuses on improving the efficiency of code within individual procedures or functions",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "f2a70e24-3474-41d1-9e80-cf8ec5e88912",
      "label": "Inter-procedural optimisation",
      "cog_level": "Understand",
      "title": "Inter-procedural optimisation",
      "description": "Inter-procedural optimisation: Inter-procedural optimization extends optimization across multiple procedures or functions",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "08aa3547-26ca-4e91-ab08-4803741e86fa",
      "label": "Machine-dependent optimisation",
      "cog_level": "Understand",
      "title": "Machine-dependent optimisation",
      "description": "Machine-dependent optimisation: These optimizations are tailored to specific hardware architectures, exploiting features and characteristics of the target machine to achieve performance improvements.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "23c1e6ed-e125-41f1-8220-d3fa7e369126",
      "label": "Compilation Scheme:",
      "cog_level": "Understand",
      "title": "Compilation Scheme:",
      "description": "Compilation Scheme:: The compilation scheme refers to the overall process and infrastructure used for transforming source code into executable machine code, including the stages of parsing, optimization, code generation, and linking.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "b3f00cb8-8f5d-4965-b52d-a9c4993610ec",
      "label": "Optimisation Infrastructure",
      "cog_level": "Understand",
      "title": "Optimisation Infrastructure",
      "description": "Optimisation Infrastructure: This encompasses the tools, techniques, and frameworks used to implement and support optimization strategies within a compiler or programming environment",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "a866e3cf-f60f-4eb1-83cd-ab0a2bd33591",
      "label": "Code Generation",
      "cog_level": "Understand",
      "title": "Code Generation",
      "description": "Code Generation: ",
      "node_type": "knowledge unit",
      "shape": "ellipse",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "124e1ab0-d05e-4aaf-8661-22ae8dc469e7",
      "label": "Taxonomy of Target Languages",
      "cog_level": "Understand",
      "title": "Taxonomy of Target Languages",
      "description": "Taxonomy of Target Languages: ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "d8b1c30e-3320-44c9-a615-16d72852a67c",
      "label": "Machine assembly",
      "cog_level": "Understand",
      "title": "Machine assembly",
      "description": "Machine assembly: Machine assembly, a low-level target language, directly maps to machine instructions and is architecture-specific.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "21ca9670-5643-4415-a3e6-ebc919e4acb5",
      "label": "Virtual machine assembly",
      "cog_level": "Understand",
      "title": "Virtual machine assembly",
      "description": "Virtual machine assembly: Virtual machine assembly targets a virtual machine, providing an intermediate representation that can be interpreted or compiled to native code.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "95d11f36-5e54-4f70-a2f5-955fa4a19695",
      "label": "Higher level language",
      "cog_level": "Understand",
      "title": "Higher level language",
      "description": "Higher level language: Higher-level languages like C, Java, or Python abstract away machine-specific details, allowing for platform-independent development.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "a8dd7189-f8e0-46d1-968a-71d0b0d8ae62",
      "label": "Virtual Machines",
      "cog_level": "Understand",
      "title": "Virtual Machines",
      "description": "Virtual Machines: Virtual machines can operate on register-based architectures, where operations are performed directly on registers.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "c4a06278-775f-4e57-9ad6-3b459ab2eabf",
      "label": "Register-based virtual machines",
      "cog_level": "Understand",
      "title": "Register-based virtual machines",
      "description": "Register-based virtual machines: ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "3eb76755-badf-43c3-a047-9a7099bbbea5",
      "label": "Stack-based virtual machines",
      "cog_level": "Understand",
      "title": "Stack-based virtual machines",
      "description": "Stack-based virtual machines: Stack-based virtual machines use a stack data structure for operand manipulation and intermediate results storage.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "f145826d-dc56-4051-a6cf-0ca1cb83a930",
      "label": "The CiviC Virtual Machine",
      "cog_level": "Understand",
      "title": "The CiviC Virtual Machine",
      "description": "The CiviC Virtual Machine: The CiviC Virtual Machine is an example of a stack-based virtual machine designed for simplicity and ease of implementation.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "e9f7b6ab-b11e-4b43-9495-1c0b3d0e7346",
      "label": "Arithmetic Operations",
      "cog_level": "Understand",
      "title": "Arithmetic Operations",
      "description": "Arithmetic Operations: Arithmetic operations in code generation encompass addition, subtraction, multiplication, and division, among others.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "4c41e702-30df-48d4-8d05-08997a97bf5d",
      "label": "Relational Operations",
      "cog_level": "Understand",
      "title": "Relational Operations",
      "description": "Relational Operations: Relational operations include comparisons like equality, inequality, greater than, less than, etc.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "374c930b-e173-476d-9eef-b91903122903",
      "label": "Logical Operations",
      "cog_level": "Understand",
      "title": "Logical Operations",
      "description": "Logical Operations: Logical operations involve Boolean operations such as AND, OR, and NOT.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "c4619741-fdbf-4a42-b1e0-e8cf19fbbde9",
      "label": "Type Conversion",
      "cog_level": "Understand",
      "title": "Type Conversion",
      "description": "Type Conversion: Type conversion converts data from one type to another, ensuring compatibility between different data types.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "07b74df3-f90a-4490-8d3a-53b1d4c50ddf",
      "label": "Constants",
      "cog_level": "Understand",
      "title": "Constants",
      "description": "Constants: Constants are fixed values in the code, while variables represent memory locations storing data that can change during program execution.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "23d807ed-f69e-4460-8d4a-3ca898b732de",
      "label": "Variables",
      "cog_level": "Understand",
      "title": "Variables",
      "description": "Variables: ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "label": "Code Generation",
      "cog_level": "Understand",
      "title": "Code Generation",
      "description": "Code Generation: ",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "e30e8d05-de99-4fb2-8132-d2cb24e02c0c",
      "label": "Basic Blocks",
      "cog_level": "Understand",
      "title": "Basic Blocks",
      "description": "Basic Blocks: Basic Blocks: Fundamental units of code containing straight-line sequences of instructions with no branches.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "55fc0819-0847-4cc4-9aef-57c237155090",
      "label": "Simple Expressions",
      "cog_level": "Understand",
      "title": "Simple Expressions",
      "description": "Simple Expressions: Simple Expressions: Generation of code for arithmetic and logical expressions involving literals and variables.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "8c9173e0-cbdd-4da9-9e3a-fb51c270f5f8",
      "label": "Control Flow Constructs",
      "cog_level": "Understand",
      "title": "Control Flow Constructs",
      "description": "Control Flow Constructs: Control Flow Constructs: Handling of conditional and iterative control flow structures.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "d49a698a-6c39-4286-a67b-95903b4442dd",
      "label": "Conditionals",
      "cog_level": "Understand",
      "title": "Conditionals",
      "description": "Conditionals: Conditionals: Translation of conditional statements like if-else into machine instructions.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "acb2b816-a88d-4c15-a389-99d63756c630",
      "label": "Do-While-Loops",
      "cog_level": "Understand",
      "title": "Do-While-Loops",
      "description": "Do-While-Loops: Do-While-Loops: Code generation for do-while loop constructs.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "c24f186d-af62-4b0d-9c46-c86219664031",
      "label": "While-Loops",
      "cog_level": "Understand",
      "title": "While-Loops",
      "description": "While-Loops: While-Loops: Translation of while loop constructs into executable code.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "aaf891e7-0ff8-40c3-b73d-f864aa19daa2",
      "label": "Extern Declarations",
      "cog_level": "Understand",
      "title": "Extern Declarations",
      "description": "Extern Declarations: Extern Declarations: Handling of external declarations for variables and functions.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "9c1dfeea-f485-4cbd-b7cf-3dc6ca14cb8e",
      "label": "External linkage information",
      "cog_level": "Understand",
      "title": "External linkage information",
      "description": "External linkage information: External Linkage Information: Management of information related to linking with external modules or libraries.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "155a0be8-f08d-4bb9-8d1d-79a9fb6789ad",
      "label": "Calling Convention",
      "cog_level": "Understand",
      "title": "Calling Convention",
      "description": "Calling Convention: Calling Convention: Specification of rules governing how function calls are performed, including parameter passing and return values.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "7809e012-cc6c-4f10-b54d-024134b4360c",
      "label": "CiviC Procedure Call Convention",
      "cog_level": "Understand",
      "title": "CiviC Procedure Call Convention",
      "description": "CiviC Procedure Call Convention: CiviC Procedure Call Convention: Specific calling convention defined for the CiviC Virtual Machine.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "8092352b-dd2b-4799-958e-bf406e13bb2d",
      "label": "Nested Functions",
      "cog_level": "Understand",
      "title": "Nested Functions",
      "description": "Nested Functions: Nested Functions: Support for functions defined within other functions.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "7c9c7f0f-b117-444d-bb2a-36ba0fb6b84b",
      "label": "Extended Context Analysis",
      "cog_level": "Understand",
      "title": "Extended Context Analysis",
      "description": "Extended Context Analysis: Extended Context Analysis: Analysis of function context to support proper code generation.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "e498e21e-dad8-4aec-aa55-66aa530c5ea0",
      "label": "Static vs Dynamic Link",
      "cog_level": "Understand",
      "title": "Static vs Dynamic Link",
      "description": "Static vs Dynamic Link: Static vs Dynamic Link: Differentiation between static linking and dynamic linking mechanisms.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "088aa9f6-64c0-41ee-963b-4f3076d0172e",
      "label": "Calling External Functions",
      "cog_level": "Understand",
      "title": "Calling External Functions",
      "description": "Calling External Functions: Calling External Functions: Generating code to call functions defined in external modules or libraries.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    },
    {
      "id": "071641f7-0115-4b22-a88b-5b013dc86336",
      "label": "Instruction Selection",
      "cog_level": "Understand",
      "title": "Instruction Selection",
      "description": "Instruction Selection: Instruction Selection: Selection of appropriate machine instructions to implement high-level language constructs.",
      "node_type": "knowledge point",
      "shape": "box",
      "color": {
        "background": "#ffd2af",
        "border": "#ffd2af"
      }
    }
  ],
  "edges": [
    {
      "from": "fdacf18f-9db8-4942-92bf-f7b27fb81956",
      "to": "56b90c37-f613-4ab4-b7cd-44e4ac278c8c",
      "title": "",
      "id": "1d4d99d5-141c-4311-98ef-6da81d37ec22"
    },
    {
      "from": "56b90c37-f613-4ab4-b7cd-44e4ac278c8c",
      "to": "6be89477-1a23-4439-80d7-900fecc0afa4",
      "title": "",
      "id": "4aa20eed-705d-476b-9436-ede026df2e45"
    },
    {
      "from": "56b90c37-f613-4ab4-b7cd-44e4ac278c8c",
      "to": "744183a0-e96d-448f-aff0-6d5a1af34329",
      "title": "",
      "id": "4a0aac5f-cbce-4195-9d73-57c02d2a7510"
    },
    {
      "from": "56b90c37-f613-4ab4-b7cd-44e4ac278c8c",
      "to": "7bd3b2df-637d-45bc-9969-50f765644aa1",
      "title": "",
      "id": "30c48138-7134-4dbe-a686-5d546760bef0"
    },
    {
      "from": "56b90c37-f613-4ab4-b7cd-44e4ac278c8c",
      "to": "df0f0e86-770b-43df-a896-9dfe011d50fb",
      "title": "",
      "id": "5643243c-aaff-4b87-a5c9-b4901af9b4d7"
    },
    {
      "from": "56b90c37-f613-4ab4-b7cd-44e4ac278c8c",
      "to": "9405d7df-5fce-42c1-a178-b1b7f6f558ee",
      "title": "",
      "id": "05060de7-25da-4cac-976f-e2dc2e282af9"
    },
    {
      "from": "56b90c37-f613-4ab4-b7cd-44e4ac278c8c",
      "to": "aac9654e-0fe1-4f6e-9530-58cdff5fe6e1",
      "title": "",
      "id": "b7a72811-c807-441f-aa3f-fa193e014389"
    },
    {
      "from": "fdacf18f-9db8-4942-92bf-f7b27fb81956",
      "to": "139a1009-1210-4808-800a-7b0f0d24845d",
      "title": "",
      "id": "6061d1b8-2e3a-4662-a16f-5f32fc02b7dd"
    },
    {
      "from": "139a1009-1210-4808-800a-7b0f0d24845d",
      "to": "5378674b-1d4c-4017-ae9b-a9affb3ce6af",
      "title": "",
      "id": "27f14a88-6198-4258-9279-25e3937c7f5b"
    },
    {
      "from": "5378674b-1d4c-4017-ae9b-a9affb3ce6af",
      "to": "211215d6-1292-4967-b265-0a8d176fc808",
      "title": "",
      "id": "2e6c62c2-8811-4516-a4cd-db095556de07"
    },
    {
      "from": "5378674b-1d4c-4017-ae9b-a9affb3ce6af",
      "to": "ec79d939-d0eb-4010-bf7c-c5c0cfbb0fc3",
      "title": "",
      "id": "4fac4957-f499-40a4-9467-d375a4e876c6"
    },
    {
      "from": "139a1009-1210-4808-800a-7b0f0d24845d",
      "to": "95792823-9b42-477b-a3f2-d55e4efb2af2",
      "title": "",
      "id": "84e3ce7c-d4ab-4e34-8c16-80aaf7d31e05"
    },
    {
      "from": "95792823-9b42-477b-a3f2-d55e4efb2af2",
      "to": "77e8262c-7ca6-4747-8af1-bd702c9aaf68",
      "title": "",
      "id": "aa1d3c56-8bdc-4678-bb3e-6233d722d0df"
    },
    {
      "from": "77e8262c-7ca6-4747-8af1-bd702c9aaf68",
      "to": "0d9073dd-1f58-42ba-9fea-80d6fd55352a",
      "title": "",
      "id": "43543355-7e0c-40d1-8cb5-660f34428c1b"
    },
    {
      "from": "77e8262c-7ca6-4747-8af1-bd702c9aaf68",
      "to": "f4610d65-f258-49dc-a554-59131ca02e39",
      "title": "",
      "id": "7930604a-3fcd-4a2d-a4f9-eefe1c337d77"
    },
    {
      "from": "77e8262c-7ca6-4747-8af1-bd702c9aaf68",
      "to": "d2dec9ce-c02b-43aa-ba5c-292e98885b87",
      "title": "",
      "id": "92d845ca-531d-4cd9-b569-81966e5723ac"
    },
    {
      "from": "95792823-9b42-477b-a3f2-d55e4efb2af2",
      "to": "9202ce69-9cf3-4cf8-863f-b7e17e9a10f3",
      "title": "",
      "id": "2d775f15-fb21-425e-bdb4-3fa25ab90d4e"
    },
    {
      "from": "9202ce69-9cf3-4cf8-863f-b7e17e9a10f3",
      "to": "41d4faab-39ce-41bf-9a2c-5dbef6a5fe4d",
      "title": "",
      "id": "0bb2d095-0520-4282-84e5-7616c952a9a9"
    },
    {
      "from": "9202ce69-9cf3-4cf8-863f-b7e17e9a10f3",
      "to": "eea6f465-4cf0-4e1d-ad56-9c49bb2c44d1",
      "title": "",
      "id": "e73280de-9589-4b24-aebc-0f79b4fe37ba"
    },
    {
      "from": "9202ce69-9cf3-4cf8-863f-b7e17e9a10f3",
      "to": "1da662cb-0504-4348-a590-95c133f65234",
      "title": "",
      "id": "1157afab-902b-4865-80a7-1895e12e8cc0"
    },
    {
      "from": "95792823-9b42-477b-a3f2-d55e4efb2af2",
      "to": "a3685ce1-41f9-4e4a-9770-7b4d8f13f19c",
      "title": "",
      "id": "425b2c8b-49f2-4935-99a8-8348bdfd037e"
    },
    {
      "from": "a3685ce1-41f9-4e4a-9770-7b4d8f13f19c",
      "to": "bc4ee3e1-fe88-4066-85f3-8e4566e5c871",
      "title": "",
      "id": "64f8099c-1ce6-4e56-b0d0-f6780af1787d"
    },
    {
      "from": "a3685ce1-41f9-4e4a-9770-7b4d8f13f19c",
      "to": "e5a241c5-6373-4770-82bc-9c5c413b2a41",
      "title": "",
      "id": "b504a711-9ab0-4369-aa43-014ffee9b06c"
    },
    {
      "from": "a3685ce1-41f9-4e4a-9770-7b4d8f13f19c",
      "to": "4d4146d1-4100-44c0-bedc-ca4fa1fb5fdb",
      "title": "",
      "id": "8da19819-384a-4967-b78d-6cd9a15393e0"
    },
    {
      "from": "fdacf18f-9db8-4942-92bf-f7b27fb81956",
      "to": "ddc2cf59-b74a-4891-881d-ebe3cb3fef0a",
      "title": "",
      "id": "ecfe3604-ca75-4d80-888b-2a73643903a7"
    },
    {
      "from": "ddc2cf59-b74a-4891-881d-ebe3cb3fef0a",
      "to": "418b1b1e-1697-4326-88ea-a6f4fb735751",
      "title": "",
      "id": "092a5f01-08f5-4517-ab09-9217bc24deb9"
    },
    {
      "from": "418b1b1e-1697-4326-88ea-a6f4fb735751",
      "to": "55ca8ed6-f7a7-41fe-8239-3f41e29ac5fb",
      "title": "",
      "id": "395e2472-46e6-4eca-9b18-f837ed243e50"
    },
    {
      "from": "418b1b1e-1697-4326-88ea-a6f4fb735751",
      "to": "20020277-6685-4c51-be06-2f7c0905d353",
      "title": "",
      "id": "168e3bda-acd3-4a7d-8769-b1047b358ff9"
    },
    {
      "from": "ddc2cf59-b74a-4891-881d-ebe3cb3fef0a",
      "to": "5aa5299a-7b22-4e3b-b947-ecf43751b3d7",
      "title": "",
      "id": "f4ae788e-51fb-4bb2-938a-04fb8ffa4bac"
    },
    {
      "from": "5aa5299a-7b22-4e3b-b947-ecf43751b3d7",
      "to": "caf9cba6-098a-41a0-a248-4ce127ab27a4",
      "title": "",
      "id": "2882c66c-0241-4710-8f34-1033b541cf6c"
    },
    {
      "from": "5aa5299a-7b22-4e3b-b947-ecf43751b3d7",
      "to": "807b6199-3852-4685-b5e8-17bc8ae5ea60",
      "title": "",
      "id": "b53188b6-2a41-4f8b-9193-8ec722c123a2"
    },
    {
      "from": "5aa5299a-7b22-4e3b-b947-ecf43751b3d7",
      "to": "5547bf85-00c5-4992-ad7b-c424ac5d8253",
      "title": "",
      "id": "9142bdd1-5df8-4a6e-b426-a570f05146b0"
    },
    {
      "from": "5aa5299a-7b22-4e3b-b947-ecf43751b3d7",
      "to": "08112abc-aa2c-4733-a895-0e460acd2eb8",
      "title": "",
      "id": "aa0bd4cd-48b1-454e-ba42-c24d0b923ea1"
    },
    {
      "from": "5aa5299a-7b22-4e3b-b947-ecf43751b3d7",
      "to": "7ce5b1cc-03f9-4b60-9319-6ba29f8c5533",
      "title": "",
      "id": "5f0160ef-943b-4fd8-8889-1906a468e4cc"
    },
    {
      "from": "7ce5b1cc-03f9-4b60-9319-6ba29f8c5533",
      "to": "67624e2d-ffc4-4964-b0fe-9ac8fe90211c",
      "title": "",
      "id": "298957e8-5a25-46f4-850d-c0f6b890ea2d"
    },
    {
      "from": "7ce5b1cc-03f9-4b60-9319-6ba29f8c5533",
      "to": "43657b25-d858-4114-83f1-5d3b6d280fe8",
      "title": "",
      "id": "7210123e-729b-43a5-b360-a90e6b8a5242"
    },
    {
      "from": "ddc2cf59-b74a-4891-881d-ebe3cb3fef0a",
      "to": "08c89033-ec64-412d-89b4-62a2d548a80a",
      "title": "",
      "id": "ea50e033-ce64-4470-8595-8f5b1202e255"
    },
    {
      "from": "fdacf18f-9db8-4942-92bf-f7b27fb81956",
      "to": "7f009238-ebd3-4de2-86f5-84f03388b011",
      "title": "",
      "id": "773c00b3-a7d0-4d1e-b229-fd50b181dfaa"
    },
    {
      "from": "7f009238-ebd3-4de2-86f5-84f03388b011",
      "to": "d6c0ad73-e48b-4442-a409-5cecd4062155",
      "title": "",
      "id": "00bff38a-322c-4b8d-9a1a-97c4d1174482"
    },
    {
      "from": "7f009238-ebd3-4de2-86f5-84f03388b011",
      "to": "c664b70f-bbab-47d9-967e-7a60fbe83b4c",
      "title": "",
      "id": "35d422fb-80f1-4261-a80c-ba2c5a7e506d"
    },
    {
      "from": "7f009238-ebd3-4de2-86f5-84f03388b011",
      "to": "f2ef797f-681a-4d22-b463-b33489a9a425",
      "title": "",
      "id": "851557a4-93f8-40a1-aba3-abfcb022d5dd"
    },
    {
      "from": "f2ef797f-681a-4d22-b463-b33489a9a425",
      "to": "bbee288c-3810-401b-b11c-41f1b68389d5",
      "title": "",
      "id": "87cf5761-4a1b-481e-a003-c32e5a34393d"
    },
    {
      "from": "7f009238-ebd3-4de2-86f5-84f03388b011",
      "to": "6637340e-bfda-4030-a562-4ae7bb312e47",
      "title": "",
      "id": "74002204-c6de-4bee-bfa4-fc44082900d3"
    },
    {
      "from": "fdacf18f-9db8-4942-92bf-f7b27fb81956",
      "to": "d1def708-d1f9-4368-8e9b-7c5698910fdf",
      "title": "",
      "id": "5bf5ca80-8c72-45e8-9fb6-eb56ec3371b8"
    },
    {
      "from": "d1def708-d1f9-4368-8e9b-7c5698910fdf",
      "to": "65ff934e-269f-4423-aaf8-2927da684a21",
      "title": "",
      "id": "5252dcef-7cae-4911-ab2d-486b387be6d2"
    },
    {
      "from": "d1def708-d1f9-4368-8e9b-7c5698910fdf",
      "to": "4ce93309-a271-4ebd-a10e-3f861fdbdf90",
      "title": "",
      "id": "b5ee7461-2d24-49bd-8956-8d1f55772727"
    },
    {
      "from": "fdacf18f-9db8-4942-92bf-f7b27fb81956",
      "to": "5b07fe6f-4ee4-4f83-a06d-391bacd01c95",
      "title": "",
      "id": "b2d160bd-c1c4-4249-a2f0-ababeeaa200c"
    },
    {
      "from": "5b07fe6f-4ee4-4f83-a06d-391bacd01c95",
      "to": "9a586954-fc98-4306-a18e-01d36372f6e2",
      "title": "",
      "id": "e43c49a7-cee8-4525-bc23-295eac3d4b45"
    },
    {
      "from": "9a586954-fc98-4306-a18e-01d36372f6e2",
      "to": "8064aef4-928e-4279-b98d-ec4adcf2dc3c",
      "title": "",
      "id": "7f0083b7-aa59-498c-a1b3-cabef224d8b8"
    },
    {
      "from": "8064aef4-928e-4279-b98d-ec4adcf2dc3c",
      "to": "6483777d-298a-484e-b1b1-683d0f7b00e6",
      "title": "",
      "id": "bcdfc9db-727a-4d47-96d0-2cddfdda210c"
    },
    {
      "from": "8064aef4-928e-4279-b98d-ec4adcf2dc3c",
      "to": "f8d7e6cf-824f-4a47-baf1-fb3b35fd271f",
      "title": "",
      "id": "2042eecb-de77-457b-ba1b-611dfbbbd31a"
    },
    {
      "from": "8064aef4-928e-4279-b98d-ec4adcf2dc3c",
      "to": "f2a70e24-3474-41d1-9e80-cf8ec5e88912",
      "title": "",
      "id": "df9cd6cb-53d9-4157-bf23-1c57f1f90c46"
    },
    {
      "from": "5b07fe6f-4ee4-4f83-a06d-391bacd01c95",
      "to": "08aa3547-26ca-4e91-ab08-4803741e86fa",
      "title": "",
      "id": "00e14de0-6e16-4ad8-a1ad-2ebff7ef2a0c"
    },
    {
      "from": "5b07fe6f-4ee4-4f83-a06d-391bacd01c95",
      "to": "23c1e6ed-e125-41f1-8220-d3fa7e369126",
      "title": "",
      "id": "a91d71bd-6fed-4759-9ace-2154933043cd"
    },
    {
      "from": "5b07fe6f-4ee4-4f83-a06d-391bacd01c95",
      "to": "b3f00cb8-8f5d-4965-b52d-a9c4993610ec",
      "title": "",
      "id": "ef3bed2c-9f79-45ab-b48b-e160f3a0561b"
    },
    {
      "from": "fdacf18f-9db8-4942-92bf-f7b27fb81956",
      "to": "a866e3cf-f60f-4eb1-83cd-ab0a2bd33591",
      "title": "",
      "id": "d11e49c7-89c9-4cb9-a9b3-f1fc89b8a45f"
    },
    {
      "from": "a866e3cf-f60f-4eb1-83cd-ab0a2bd33591",
      "to": "124e1ab0-d05e-4aaf-8661-22ae8dc469e7",
      "title": "",
      "id": "e71a5601-8d60-4ec5-a14e-66189be750f9"
    },
    {
      "from": "124e1ab0-d05e-4aaf-8661-22ae8dc469e7",
      "to": "d8b1c30e-3320-44c9-a615-16d72852a67c",
      "title": "",
      "id": "887c3f4d-3f11-49d0-a6c6-4f988b796e93"
    },
    {
      "from": "124e1ab0-d05e-4aaf-8661-22ae8dc469e7",
      "to": "21ca9670-5643-4415-a3e6-ebc919e4acb5",
      "title": "",
      "id": "f1bfa6cf-252a-43cd-ae2e-4231f98d46fc"
    },
    {
      "from": "124e1ab0-d05e-4aaf-8661-22ae8dc469e7",
      "to": "95d11f36-5e54-4f70-a2f5-955fa4a19695",
      "title": "",
      "id": "d17e3796-84dd-4bc3-a5dd-f3997ae0eeb2"
    },
    {
      "from": "a866e3cf-f60f-4eb1-83cd-ab0a2bd33591",
      "to": "a8dd7189-f8e0-46d1-968a-71d0b0d8ae62",
      "title": "",
      "id": "2144a48c-3ea7-464d-9c59-77ed3cc35b5a"
    },
    {
      "from": "a8dd7189-f8e0-46d1-968a-71d0b0d8ae62",
      "to": "c4a06278-775f-4e57-9ad6-3b459ab2eabf",
      "title": "",
      "id": "0bc77afb-a975-41e9-8f59-b6150150df62"
    },
    {
      "from": "a8dd7189-f8e0-46d1-968a-71d0b0d8ae62",
      "to": "3eb76755-badf-43c3-a047-9a7099bbbea5",
      "title": "",
      "id": "f57d2eab-5ab4-4f06-88ac-8ce292672a23"
    },
    {
      "from": "a866e3cf-f60f-4eb1-83cd-ab0a2bd33591",
      "to": "f145826d-dc56-4051-a6cf-0ca1cb83a930",
      "title": "",
      "id": "1847305d-a845-4d59-9239-7ea33ca3423d"
    },
    {
      "from": "f145826d-dc56-4051-a6cf-0ca1cb83a930",
      "to": "e9f7b6ab-b11e-4b43-9495-1c0b3d0e7346",
      "title": "",
      "id": "9bc09bed-fd6e-4100-873a-8defcb4ce8ef"
    },
    {
      "from": "f145826d-dc56-4051-a6cf-0ca1cb83a930",
      "to": "4c41e702-30df-48d4-8d05-08997a97bf5d",
      "title": "",
      "id": "6cb32bdb-dbfb-4d4a-bc49-9041d0a04e0f"
    },
    {
      "from": "f145826d-dc56-4051-a6cf-0ca1cb83a930",
      "to": "374c930b-e173-476d-9eef-b91903122903",
      "title": "",
      "id": "ea492dbb-84f4-4480-a6c5-7083e76a44bb"
    },
    {
      "from": "f145826d-dc56-4051-a6cf-0ca1cb83a930",
      "to": "c4619741-fdbf-4a42-b1e0-e8cf19fbbde9",
      "title": "",
      "id": "e31cc534-d343-450d-b644-e7f86e27fae9"
    },
    {
      "from": "f145826d-dc56-4051-a6cf-0ca1cb83a930",
      "to": "07b74df3-f90a-4490-8d3a-53b1d4c50ddf",
      "title": "",
      "id": "64f855f3-062c-4454-ac56-ed75488f556e"
    },
    {
      "from": "f145826d-dc56-4051-a6cf-0ca1cb83a930",
      "to": "23d807ed-f69e-4460-8d4a-3ca898b732de",
      "title": "",
      "id": "f2c18cf9-3b87-4d69-b501-f7ed425497a6"
    },
    {
      "from": "a866e3cf-f60f-4eb1-83cd-ab0a2bd33591",
      "to": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "title": "",
      "id": "6b27fec1-703a-4e38-b707-1db08ebd69fe"
    },
    {
      "from": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "to": "e30e8d05-de99-4fb2-8132-d2cb24e02c0c",
      "title": "",
      "id": "ac7ccc28-b544-446a-94bb-ff1d3cc3e140"
    },
    {
      "from": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "to": "55fc0819-0847-4cc4-9aef-57c237155090",
      "title": "",
      "id": "f3689854-63cb-46bd-af1c-129e0ea4bc9d"
    },
    {
      "from": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "to": "8c9173e0-cbdd-4da9-9e3a-fb51c270f5f8",
      "title": "",
      "id": "749193a4-bcea-4808-a944-06865ad7107a"
    },
    {
      "from": "8c9173e0-cbdd-4da9-9e3a-fb51c270f5f8",
      "to": "d49a698a-6c39-4286-a67b-95903b4442dd",
      "title": "",
      "id": "e72b4ccb-e86c-4aab-b3ae-2412f3b8c216"
    },
    {
      "from": "8c9173e0-cbdd-4da9-9e3a-fb51c270f5f8",
      "to": "acb2b816-a88d-4c15-a389-99d63756c630",
      "title": "",
      "id": "c65db832-06a1-474f-9f1e-f1357d8eca39"
    },
    {
      "from": "8c9173e0-cbdd-4da9-9e3a-fb51c270f5f8",
      "to": "c24f186d-af62-4b0d-9c46-c86219664031",
      "title": "",
      "id": "ea486228-2cdb-4e0a-86e4-94fc0b835d6b"
    },
    {
      "from": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "to": "aaf891e7-0ff8-40c3-b73d-f864aa19daa2",
      "title": "",
      "id": "8ee4949f-7149-4943-a729-f7ba4a973069"
    },
    {
      "from": "aaf891e7-0ff8-40c3-b73d-f864aa19daa2",
      "to": "9c1dfeea-f485-4cbd-b7cf-3dc6ca14cb8e",
      "title": "",
      "id": "7fb072af-95d3-4c7a-9956-84068aecf151"
    },
    {
      "from": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "to": "155a0be8-f08d-4bb9-8d1d-79a9fb6789ad",
      "title": "",
      "id": "80cd2b5b-ebeb-4ffa-8304-f8cfdefc38fe"
    },
    {
      "from": "155a0be8-f08d-4bb9-8d1d-79a9fb6789ad",
      "to": "7809e012-cc6c-4f10-b54d-024134b4360c",
      "title": "",
      "id": "e8948a83-464a-49ed-bbe3-db63e0b11c49"
    },
    {
      "from": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "to": "8092352b-dd2b-4799-958e-bf406e13bb2d",
      "title": "",
      "id": "ac5a2baf-764d-4fa5-9695-b31ec079e429"
    },
    {
      "from": "8092352b-dd2b-4799-958e-bf406e13bb2d",
      "to": "7c9c7f0f-b117-444d-bb2a-36ba0fb6b84b",
      "title": "",
      "id": "d2da7fdf-7e99-463a-9d3d-a70dc0e3cedd"
    },
    {
      "from": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "to": "e498e21e-dad8-4aec-aa55-66aa530c5ea0",
      "title": "",
      "id": "e54b47bc-5068-4c22-a275-3d579f309a6b"
    },
    {
      "from": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "to": "088aa9f6-64c0-41ee-963b-4f3076d0172e",
      "title": "",
      "id": "b93aef65-73c4-477b-bb96-5ee44089131e"
    },
    {
      "from": "82dc229a-09be-4027-8870-5944fb94d4a9",
      "to": "071641f7-0115-4b22-a88b-5b013dc86336",
      "title": "",
      "id": "b848bcb4-95c6-4c15-a0da-aeb9cd4b9d86"
    }
  ]
}