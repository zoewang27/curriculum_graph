{
  "nodes": [
    {
      "id": "1",
      "label": "Introduction to Programming",
      "group": "1",
      "shape": "circle",
      "cog_level": "",
      "title": "Introduction to Programming: ",
      "layer": 0
    },
    {
      "id": "1.1",
      "label": "C introduction",
      "group": "1",
      "shape": "box",
      "cog_level": "Understand",
      "title": "C introduction: C introduction: C is a general-purpose, procedural programming language developed by Dennis Ritchie at Bell Labs in the early 1970s.",
      "layer": 1
    },
    {
      "id": "1.1.2",
      "label": "Types",
      "group": "1",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Types: Types: C supports various data types, including integers, floating-point numbers, characters, and pointers, among others.",
      "layer": 2
    },
    {
      "id": "1.10",
      "label": "C++ introduction",
      "group": "1",
      "shape": "box",
      "cog_level": "Understand",
      "title": "C++ introduction: C++ Introduction: C++ is a general-purpose programming language developed as an extension of the C programming language.",
      "layer": 1
    },
    {
      "id": "1.3",
      "label": "CFunction",
      "group": "1",
      "shape": "box",
      "cog_level": "Understand",
      "title": "CFunction: Function: In C, a function is a block of code that performs a specific task. It has a name, a return type, parameters (optional), and a body.",
      "layer": 1
    },
    {
      "id": "1.3.3",
      "label": "Control-flow",
      "group": "1",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Control-flow: Control-flow: Control-flow refers to the order in which statements are executed in a program. In C, control-flow is managed using control structures such as if-else statements, loops (for, while, do-while), switch statements, and function calls. ",
      "layer": 2
    },
    {
      "id": "1.5",
      "label": "Strings and arrays",
      "group": "1",
      "shape": "box",
      "cog_level": "Understand",
      "title": "Strings and arrays: ",
      "layer": 1
    },
    {
      "id": "1.6",
      "label": "Input and output(I/O)",
      "group": "1",
      "shape": "box",
      "cog_level": "Understand",
      "title": "Input and output(I/O): Input and output (I/O): In C, input and output operations are typically performed using the stdio.h library, which provides functions like printf for output and scanf for input.",
      "layer": 1
    },
    {
      "id": "1.6.2",
      "label": "Error handling",
      "group": "1",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Error handling: Error handling: C provides mechanisms for error handling, including return values from functions, setting errno (error number), and using perror and fprintf(stderr, ...) to output error messages.",
      "layer": 2
    },
    {
      "id": "1.7",
      "label": "Self-defined types",
      "group": "1",
      "shape": "box",
      "cog_level": "Understand",
      "title": "Self-defined types: ",
      "layer": 1
    },
    {
      "id": "1.7.3",
      "label": "Struct",
      "group": "1",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Struct: Struct: Structs in C allow you to create composite data types by grouping together variables of different types under a single name. ",
      "layer": 2
    },
    {
      "id": "4",
      "label": "Programming Languages",
      "group": "4",
      "shape": "circle",
      "cog_level": "Understand",
      "title": "Programming Languages: ",
      "layer": 0
    },
    {
      "id": "4.2",
      "label": "Python",
      "group": "4",
      "shape": "box",
      "cog_level": "Understand",
      "title": "Python: Python: High-level, interpreted, general-purpose programming language.",
      "layer": 1
    },
    {
      "id": "4.2.2",
      "label": "Fundamental Types",
      "group": "4",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Fundamental Types: Fundamental Types: Integers, floats, strings, booleans, lists, tuples, dictionaries, sets.",
      "layer": 2
    },
    {
      "id": "4.2.4",
      "label": "Flow Control",
      "group": "4",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Flow Control: Flow Control: if-else statements, loops (for, while).",
      "layer": 2
    },
    {
      "id": "4.2.6",
      "label": "Strings",
      "group": "4",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Strings: Strings: Immutable sequences of characters, supporting a wide range of string manipulation operations.",
      "layer": 2
    },
    {
      "id": "4.3",
      "label": "C++",
      "group": "4",
      "shape": "box",
      "cog_level": "Understand",
      "title": "C++: ",
      "layer": 1
    },
    {
      "id": "4.3.1",
      "label": "History",
      "group": "4",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "History: History: Developed by Bjarne Stroustrup in 1983 as an extension of the C programming language.",
      "layer": 2
    },
    {
      "id": "4.3.3",
      "label": "Types",
      "group": "4",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Types: Types: Strongly typed language supporting fundamental types like integers, floats, characters, as well as user-defined types.",
      "layer": 2
    },
    {
      "id": "4.3.9",
      "label": "Data structures",
      "group": "4",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Data structures: Data Structures: C++ offers a rich set of data structures including arrays, vectors, linked lists, stacks, queues, trees, and maps, among others.",
      "layer": 2
    },
    {
      "id": "4.5",
      "label": "Haskell",
      "group": "4",
      "shape": "box",
      "cog_level": "Understand",
      "title": "Haskell: Haskell: A purely functional programming language known for its strong type system and lazy evaluation.",
      "layer": 1
    },
    {
      "id": "4.5.3",
      "label": "Functions",
      "group": "4",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Functions: Functions: Fundamental building blocks for defining computations, often using pattern matching and recursion.",
      "layer": 2
    },
    {
      "id": "4.5.8",
      "label": "Input/Output",
      "group": "4",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Input/Output: Input/Output: Interaction with the outside world, including reading from and writing to files, handling user input, and performing IO operations.",
      "layer": 2
    },
    {
      "id": "4.7",
      "label": "Enlang",
      "group": "4",
      "shape": "box",
      "cog_level": "Understand",
      "title": "Enlang: ",
      "layer": 1
    },
    {
      "id": "4.7.5",
      "label": "Data types",
      "group": "4",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Data types: Data types: Erlang supports a variety of data types including integers, floats, atoms, tuples, lists, binaries, and maps, as well as user-defined data structures.",
      "layer": 2
    },
    {
      "id": "4.7.8",
      "label": "Error handling",
      "group": "4",
      "shape": "ellipse",
      "cog_level": "Understand",
      "title": "Error handling: Error handling: Erlang has built-in mechanisms for error handling, including the use of exception handling with try...catch blocks and the error function for raising errors.",
      "layer": 2
    }
  ],
  "edges": [
    {
      "from": "1",
      "to": "1.1",
      "title": ""
    },
    {
      "from": "4.3",
      "to": "4.3.1",
      "title": ""
    },
    {
      "from": "4",
      "to": "4.3",
      "title": ""
    },
    {
      "from": "1.1",
      "to": "1.1.2",
      "title": ""
    },
    {
      "from": "4.2",
      "to": "4.2.2",
      "title": ""
    },
    {
      "from": "4",
      "to": "4.2",
      "title": ""
    },
    {
      "from": "4.3",
      "to": "4.3.3",
      "title": ""
    },
    {
      "from": "4.7",
      "to": "4.7.5",
      "title": ""
    },
    {
      "from": "4",
      "to": "4.7",
      "title": ""
    },
    {
      "from": "1",
      "to": "1.3",
      "title": ""
    },
    {
      "from": "4.5",
      "to": "4.5.3",
      "title": ""
    },
    {
      "from": "4",
      "to": "4.5",
      "title": ""
    },
    {
      "from": "1.3",
      "to": "1.3.3",
      "title": ""
    },
    {
      "from": "4.2",
      "to": "4.2.4",
      "title": ""
    },
    {
      "from": "1",
      "to": "1.5",
      "title": ""
    },
    {
      "from": "4.2",
      "to": "4.2.6",
      "title": ""
    },
    {
      "from": "1",
      "to": "1.6",
      "title": ""
    },
    {
      "from": "4.5",
      "to": "4.5.8",
      "title": ""
    },
    {
      "from": "1.6",
      "to": "1.6.2",
      "title": ""
    },
    {
      "from": "4.7",
      "to": "4.7.8",
      "title": ""
    },
    {
      "from": "1",
      "to": "1.7",
      "title": ""
    },
    {
      "from": "1.7",
      "to": "1.7.3",
      "title": ""
    },
    {
      "from": "4.3",
      "to": "4.3.9",
      "title": ""
    },
    {
      "from": "1",
      "to": "1.10",
      "title": ""
    },
    {
      "from": "1.1",
      "to": "4.3.1",
      "title": "0.6471",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.1.2",
      "to": "4.2.2",
      "title": "0.6943",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.1.2",
      "to": "4.3.3",
      "title": "0.7788",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.1.2",
      "to": "4.7.5",
      "title": "0.6438",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.3",
      "to": "4.5.3",
      "title": "0.674",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.3.3",
      "to": "4.2.4",
      "title": "0.6339",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.5",
      "to": "4.2.6",
      "title": "0.6106",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.6",
      "to": "4.5.8",
      "title": "0.7602",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.6.2",
      "to": "4.7.8",
      "title": "0.6508",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.7",
      "to": "4.3.3",
      "title": "0.6858",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.7.3",
      "to": "4.3.9",
      "title": "0.6126",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.10",
      "to": "4.3",
      "title": "0.7021",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    },
    {
      "from": "1.10",
      "to": "4.3.9",
      "title": "0.6494",
      "color": "grey",
      "width": 1,
      "shadow": false,
      "dashes": true
    }
  ],
  "courseId": [
    "1",
    "4"
  ]
}