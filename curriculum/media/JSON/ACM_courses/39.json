{
  "nodes": [
    {
      "id": "9c9fb42d-7ced-4007-ae48-1c7959abbe3f",
      "label": "Foundations of Programming Languages",
      "cog_level": "Create",
      "title": "Foundations of Programming Languages",
      "description": "Foundations of Programming Languages: ",
      "node_type": "course",
      "shape": "circle"
    },
    {
      "id": "a17a8e15-6d81-4f80-a1af-b8627e8bac1c",
      "label": "Decomposition into bjects carrying state and having behavior",
      "cog_level": "Create",
      "title": "Decomposition into bjects carrying state and having behavior",
      "description": "Decomposition into bjects carrying state and having behavior: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "fafe0401-ba06-417d-813f-bd58d6c4a348",
      "label": "Class-hierarchy design for modeling",
      "cog_level": "Create",
      "title": "Class-hierarchy design for modeling",
      "description": "Class-hierarchy design for modeling: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "cce70603-db32-49b4-bbe0-8c571816243b",
      "label": "Definition of classes",
      "cog_level": "Create",
      "title": "Definition of classes",
      "description": "Definition of classes: fields, methods, and constructors",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "68d21898-79f6-49e0-8321-a2cc380d4a93",
      "label": "Subclasses, inheritance (including multiple inheritance), and method overriding",
      "cog_level": "Create",
      "title": "Subclasses, inheritance (including multiple inheritance), and method overriding",
      "description": "Subclasses, inheritance (including multiple inheritance), and method overriding: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "ab773a3a-4b32-41c0-b7cd-9384a8742798",
      "label": "Dynamic dispatch",
      "cog_level": "Create",
      "title": "Dynamic dispatch",
      "description": "Dynamic dispatch: definition of method-call",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "3deb968b-926e-442d-aaeb-9f1212835ee8",
      "label": "Exception handling",
      "cog_level": "Create",
      "title": "Exception handling",
      "description": "Exception handling: Exception handling is a mechanism used to manage and respond to exceptional conditions or errors that occur during program execution.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "140acc4c-8549-473e-a26b-8c3a34b2544f",
      "label": "Privacy, data hiding, and visibility of class members",
      "cog_level": "Create",
      "title": "Privacy, data hiding, and visibility of class members",
      "description": "Privacy, data hiding, and visibility of class members: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "2923f906-d67a-4281-8878-c9e8b812e8a4",
      "label": "Interfaces revealing only method signatures",
      "cog_level": "Create",
      "title": "Interfaces revealing only method signatures",
      "description": "Interfaces revealing only method signatures: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "dc5778ef-e9d3-441f-94df-daa9f91bba5b",
      "label": "Abstract base classes, traits and mixins",
      "cog_level": "Create",
      "title": "Abstract base classes, traits and mixins",
      "description": "Abstract base classes, traits and mixins: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "8c66a393-f982-4dd1-a44a-914e9664d841",
      "label": "Dynamic vs static properties",
      "cog_level": "Create",
      "title": "Dynamic vs static properties",
      "description": "Dynamic vs static properties: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "8f39b8d5-5a5f-42bd-a6ee-f34e68e5334d",
      "label": "Composition vs inheritance",
      "cog_level": "Create",
      "title": "Composition vs inheritance",
      "description": "Composition vs inheritance: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "b79f9206-d473-4fcc-859c-d2566daa6cef",
      "label": "Subtyping",
      "cog_level": "Create",
      "title": "Subtyping",
      "description": "Subtyping: a subtype is a type that is related to another type (called the supertype) by some form of specialization or refinement.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "58567f7b-095f-4882-be20-8106539b166b",
      "label": "Subtype polymorphism; implicit upcasts in typed languages",
      "cog_level": "Create",
      "title": "Subtype polymorphism; implicit upcasts in typed languages",
      "description": "Subtype polymorphism; implicit upcasts in typed languages: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "22994eb3-2812-4d16-8565-1bcbc3f11a8f",
      "label": "Notion of behavioral replacement: subtypes acting like supertypes",
      "cog_level": "Create",
      "title": "Notion of behavioral replacement: subtypes acting like supertypes",
      "description": "Notion of behavioral replacement: subtypes acting like supertypes: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "c4d6ad8e-6551-43a4-93d7-79fcd9fcd0df",
      "label": "Relationship between subtyping and inheritance",
      "cog_level": "Create",
      "title": "Relationship between subtyping and inheritance",
      "description": "Relationship between subtyping and inheritance: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "20934836-3b5b-498b-a0f5-4fe76b5eb285",
      "label": "Collection classes, iterators, and other common library components",
      "cog_level": "Create",
      "title": "Collection classes, iterators, and other common library components",
      "description": "Collection classes, iterators, and other common library components: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "e8121d87-1024-46c9-986a-bcc718ccd77a",
      "label": "Functional Programming",
      "cog_level": "Create",
      "title": "Functional Programming",
      "description": "Functional Programming: Functional programming is a programming paradigm that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "node_type": "knowledge unit",
      "shape": "ellipse"
    },
    {
      "id": "f8fea7bc-1104-457c-980b-4afd776f9dff",
      "label": "Lambda expressions and evaluation",
      "cog_level": "Create",
      "title": "Lambda expressions and evaluation",
      "description": "Lambda expressions and evaluation: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "af0eca93-c0c8-43ec-a4dd-995b1ee8ead6",
      "label": "Variable binding and scope rules",
      "cog_level": "Create",
      "title": "Variable binding and scope rules",
      "description": "Variable binding and scope rules: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "76c572db-7c1d-4e7c-acfb-d935b653cb4b",
      "label": "Parameter passing",
      "cog_level": "Create",
      "title": "Parameter passing",
      "description": "Parameter passing: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "5a4867f6-3679-4a6c-8902-2b1a34b1165e",
      "label": "Nested lambda expressions and reduction order",
      "cog_level": "Create",
      "title": "Nested lambda expressions and reduction order",
      "description": "Nested lambda expressions and reduction order: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "38c5f311-6cc1-4eb4-b649-e08d9e7b0394",
      "label": "Effect-free programming",
      "cog_level": "Create",
      "title": "Effect-free programming",
      "description": "Effect-free programming: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "4ecfbe4f-4d61-4632-8e38-4c3eeea9f248",
      "label": "Function calls have nside effects, facilitating compositional reasoning",
      "cog_level": "Create",
      "title": "Function calls have nside effects, facilitating compositional reasoning",
      "description": "Function calls have nside effects, facilitating compositional reasoning: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "d3c50462-f55b-41fc-b46c-4364927b6290",
      "label": "Immutable variables and data copying vs. reduction",
      "cog_level": "Create",
      "title": "Immutable variables and data copying vs. reduction",
      "description": "Immutable variables and data copying vs. reduction: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "749ac468-d439-4671-a82e-6016068b582a",
      "label": "Use of recursion vs. loops vs. pipelining (map/reduce)",
      "cog_level": "Create",
      "title": "Use of recursion vs. loops vs. pipelining (map/reduce)",
      "description": "Use of recursion vs. loops vs. pipelining (map/reduce): ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "e27b8ea4-8876-440c-a36a-4551083f0f5e",
      "label": "Processing structured data (e.g., trees) via functions with cases for each data variant",
      "cog_level": "Create",
      "title": "Processing structured data (e.g., trees) via functions with cases for each data variant",
      "description": "Processing structured data (e.g., trees) via functions with cases for each data variant: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "1b67cc91-02da-476a-947c-4b7df2542177",
      "label": "Functions defined over compound data in terms of functions applied tthe constituent pleces",
      "cog_level": "Create",
      "title": "Functions defined over compound data in terms of functions applied tthe constituent pleces",
      "description": "Functions defined over compound data in terms of functions applied tthe constituent pleces: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "e263d984-1fbe-43a0-bc50-7fea18a976c5",
      "label": "Persistent data structures",
      "cog_level": "Create",
      "title": "Persistent data structures",
      "description": "Persistent data structures: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "6cf6d9cd-b9cc-4101-adcd-1ae86cb363fa",
      "label": "Using higher-order functions",
      "cog_level": "Create",
      "title": "Using higher-order functions",
      "description": "Using higher-order functions: taking, returning, and storing functions",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "4c3ae244-2440-410f-9aff-b2b98e0e6177",
      "label": "Function closures",
      "cog_level": "Understand",
      "title": "Function closures",
      "description": "Function closures: functions using variables in the enclosing lexical environment",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "0b96684e-54ed-4bb9-93d8-467cde7a65bd",
      "label": "Basic meaning and definition",
      "cog_level": "Understand",
      "title": "Basic meaning and definition",
      "description": "Basic meaning and definition: creating closures at run-time by capturing the environment",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "2442dc79-b73d-407a-badb-b4bc3dd21539",
      "label": "Canonical idioms",
      "cog_level": "Understand",
      "title": "Canonical idioms",
      "description": "Canonical idioms: call-backs, arguments titerators, reusable code via function arguments",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "63daf489-c95d-4c4e-83c5-3b2339154221",
      "label": "Using a closure tencapsulate data in its environment",
      "cog_level": "Understand",
      "title": "Using a closure tencapsulate data in its environment",
      "description": "Using a closure tencapsulate data in its environment: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "56e013e6-9dbd-48bd-ba10-70b11ef2bfe9",
      "label": "Lazy versus eager evaluation",
      "cog_level": "Understand",
      "title": "Lazy versus eager evaluation",
      "description": "Lazy versus eager evaluation: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "c6cbad8b-053b-4166-bf72-4165e3920a23",
      "label": "Defining and implementing functions ",
      "cog_level": "Understand",
      "title": "Defining and implementing functions ",
      "description": "Defining and implementing functions : Defining and implementing functions that can accept a function as a parameter, be combined with another function, or return a function.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "4bb34ebd-307b-4ad5-ba7f-98f0271627b8",
      "label": "Logic Programming",
      "cog_level": "",
      "title": "Logic Programming",
      "description": "Logic Programming: Logic programming is a programming paradigm based on formal logic, where programs are expressed as sets of logical statements or rules that define relationships and constraints between objects. ",
      "node_type": "knowledge unit",
      "shape": "ellipse"
    },
    {
      "id": "3f99f224-0a3c-44a1-9c1e-dd62f7911121",
      "label": "Universal vs.existential quantifiers",
      "cog_level": "Understand",
      "title": "Universal vs.existential quantifiers",
      "description": "Universal vs.existential quantifiers: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "b1dc4bd6-8b99-452d-8864-829e28325a6f",
      "label": "First order predicate logic vs. higher order logic",
      "cog_level": "Understand",
      "title": "First order predicate logic vs. higher order logic",
      "description": "First order predicate logic vs. higher order logic: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "63e2f2d1-3111-4a3e-97c5-5fda6d0d3790",
      "label": "Expressing complex relations using logical connectives and simpler relations",
      "cog_level": "Understand",
      "title": "Expressing complex relations using logical connectives and simpler relations",
      "description": "Expressing complex relations using logical connectives and simpler relations: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "5681ca05-7b8d-482b-870a-83522080ec70",
      "label": "Definitions of Horn clause, facts, goals, and subgoals",
      "cog_level": "Understand",
      "title": "Definitions of Horn clause, facts, goals, and subgoals",
      "description": "Definitions of Horn clause, facts, goals, and subgoals: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "23e883e1-ac8f-4357-b9ee-d49434e67912",
      "label": "Unification and unification algorithm; unification vs. assertion vs expression evaluation",
      "cog_level": "Understand",
      "title": "Unification and unification algorithm; unification vs. assertion vs expression evaluation",
      "description": "Unification and unification algorithm; unification vs. assertion vs expression evaluation: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "5ec2f2ae-9a50-4dcf-9417-d77c9b9423d0",
      "label": "Mixing relations with functions",
      "cog_level": "Understand",
      "title": "Mixing relations with functions",
      "description": "Mixing relations with functions: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "ad06a372-6c29-48db-b660-5ad4fa679007",
      "label": "Cuts, backtracking and non-determinism",
      "cog_level": "Understand",
      "title": "Cuts, backtracking and non-determinism",
      "description": "Cuts, backtracking and non-determinism: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "e7745503-b20a-4842-9c92-cde4e4185fe4",
      "label": "Closed-world vs. open-world assumptions",
      "cog_level": "Understand",
      "title": "Closed-world vs. open-world assumptions",
      "description": "Closed-world vs. open-world assumptions: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "label": "Scripting",
      "cog_level": "",
      "title": "Scripting",
      "description": "Scripting: Scripting involves writing scripts or programs that automate tasks by executing a series of commands or instructions in a particular scripting language. ",
      "node_type": "knowledge unit",
      "shape": "ellipse"
    },
    {
      "id": "47d4f49c-0bb1-4c97-90c6-80a6f3490703",
      "label": "Divide, combine, conquer",
      "cog_level": "Create",
      "title": "Divide, combine, conquer",
      "description": "Divide, combine, conquer: involves breaking down a problem into smaller, more manageable subproblems, solving each subproblem independently, and then combining the solutions to obtain the final result.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "30190b4e-bc9e-4cc4-8b11-835211e2c6f8",
      "label": "Fork",
      "cog_level": "Create",
      "title": "Fork",
      "description": "Fork: \"fork\" refers to the creation of a new process (child process) from an existing process (parent process). ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "43a40fab-124a-4c22-8e08-dcf454749365",
      "label": "Error/exception handling",
      "cog_level": "Create",
      "title": "Error/exception handling",
      "description": "Error/exception handling: Error handling involves detecting, reporting, and responding to errors or exceptional conditions that occur during program execution. ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "5dd82635-5ded-4628-ae7b-df19e76d5a10",
      "label": "I/redirection",
      "cog_level": "Create",
      "title": "I/redirection",
      "description": "I/redirection: I/O redirection is a feature that allows the input and output streams of a program to be redirected from their default sources or destinations to other sources or destinations. ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "fec26353-d976-4059-ab7a-5c9e816c844a",
      "label": "System commands",
      "cog_level": "Create",
      "title": "System commands",
      "description": "System commands: System commands are commands or programs provided by the operating system or shell environment that perform various system-level tasks, such as managing files, processes, and system configuration.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "c05812f0-4943-4353-8cd9-5a22967dccef",
      "label": "Environment variables",
      "cog_level": "Create",
      "title": "Environment variables",
      "description": "Environment variables: Environment variables are variables that are part of the operating system's environment and are accessible to all programs running on the system. ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "c77372f1-2ccc-4baf-8ba4-5a81747f4272",
      "label": "File test operators",
      "cog_level": "Create",
      "title": "File test operators",
      "description": "File test operators: File test operators are operators used in scripting languages to test various attributes or properties of files, such as existence, type, permissions, and size.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "a426d4a8-0a24-43ad-9743-7376878c8804",
      "label": "Data structures",
      "cog_level": "Create",
      "title": "Data structures",
      "description": "Data structures: Data structures are structures or formats used to organize and store data efficiently. ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "6663a341-a41b-472a-b440-2820e644d7fc",
      "label": "Arrays and lists",
      "cog_level": "Create",
      "title": "Arrays and lists",
      "description": "Arrays and lists: Arrays and lists are ordered collections of elements, where elements can be accessed by their index or position in the collection. ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "933071cc-7efb-4440-914b-2b3428b4367f",
      "label": "Slices",
      "cog_level": "Create",
      "title": "Slices",
      "description": "Slices: Slices are a feature found in some programming languages that allow you to extract a contiguous subset of elements from an array or list.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "2522803e-3374-4b3a-b754-0cd5d702d168",
      "label": "List Comprehensions",
      "cog_level": "Create",
      "title": "List Comprehensions",
      "description": "List Comprehensions: List comprehensions are a concise way to create lists in some programming languages by applying an expression to each element of an iterable and filtering the results based on a condition.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "1ffdec6a-6102-43d8-99b8-c491c52507f4",
      "label": "Regular expressions",
      "cog_level": "Create",
      "title": "Regular expressions",
      "description": "Regular expressions: Regular expressions are patterns used to match and manipulate text strings.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "cd03f3f7-3a17-4df7-ac17-89de46b56141",
      "label": "Dynamic typing",
      "cog_level": "Create",
      "title": "Dynamic typing",
      "description": "Dynamic typing: Dynamic typing is a feature of some programming languages where variables are not bound to a specific data type at compile time but can instead hold values of any type during runtime.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "d7cc8581-c669-44ba-b7d6-4afdd67e7d9a",
      "label": "Function declarations",
      "cog_level": "Create",
      "title": "Function declarations",
      "description": "Function declarations: Function declarations define named blocks of code that can be called or invoked to perform a specific task.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "d33ac02e-7b48-4762-97d6-fc720b2f30b7",
      "label": "Processes and threads",
      "cog_level": "Create",
      "title": "Processes and threads",
      "description": "Processes and threads: Processes and threads are units of execution in a computer system.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "605b96a4-4ea4-4252-ab67-1afdf91045f7",
      "label": "Code objects",
      "cog_level": "Create",
      "title": "Code objects",
      "description": "Code objects: Code objects are objects that represent compiled code in memory.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "d9defd3e-dcfc-47c9-9493-2328bdf9f238",
      "label": "Event-driven and Reactive Programming ",
      "cog_level": "Create",
      "title": "Event-driven and Reactive Programming ",
      "description": "Event-driven and Reactive Programming : Event-driven and reactive programming are two programming paradigms that focus on handling and responding to events or changes in a system.",
      "node_type": "knowledge unit",
      "shape": "ellipse"
    },
    {
      "id": "bdf69e75-54b6-4205-8acd-3a782cb3bd24",
      "label": "Procedural programming vs. reactive programming: advantages of reactive programming in capturing events",
      "cog_level": "Create",
      "title": "Procedural programming vs. reactive programming: advantages of reactive programming in capturing events",
      "description": "Procedural programming vs. reactive programming: advantages of reactive programming in capturing events: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "7822cfd4-9cc1-4f88-a416-4fb0b37fd906",
      "label": "Components of reactive programming: event-source, event signals, listeners and dispatchers, event objects, adapters, event-handlers",
      "cog_level": "Create",
      "title": "Components of reactive programming: event-source, event signals, listeners and dispatchers, event objects, adapters, event-handlers",
      "description": "Components of reactive programming: event-source, event signals, listeners and dispatchers, event objects, adapters, event-handlers: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "8c8be7c8-7c85-4965-8848-19e349111e2f",
      "label": "Behavior model of event-based programming",
      "cog_level": "Create",
      "title": "Behavior model of event-based programming",
      "description": "Behavior model of event-based programming: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "4e9e56c6-2e84-4cba-b00a-a6f5b0d24e8b",
      "label": "Canonical uses such as GUls, mobile devices, robots, servers",
      "cog_level": "Create",
      "title": "Canonical uses such as GUls, mobile devices, robots, servers",
      "description": "Canonical uses such as GUls, mobile devices, robots, servers: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "2cbff540-3634-4bc8-899e-d7ace1989e71",
      "label": "Reactive programs as state transition system",
      "cog_level": "Create",
      "title": "Reactive programs as state transition system",
      "description": "Reactive programs as state transition system: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "ef1c2a34-46c0-4cc2-8af2-b59dcf7f44c9",
      "label": "Using a reactive framework",
      "cog_level": "Create",
      "title": "Using a reactive framework",
      "description": "Using a reactive framework: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "34db2707-11d5-486a-9d00-4998d8fc7a2e",
      "label": "Defining event handlers/listeners",
      "cog_level": "Create",
      "title": "Defining event handlers/listeners",
      "description": "Defining event handlers/listeners: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "e5bbf87c-abca-41f1-8caa-3073cdd73251",
      "label": "Parameterization of event senders and event arguments",
      "cog_level": "Create",
      "title": "Parameterization of event senders and event arguments",
      "description": "Parameterization of event senders and event arguments: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "733a48e8-2cca-444c-be9a-771d27d37a93",
      "label": "Externally-generated events and program-generated events",
      "cog_level": "Create",
      "title": "Externally-generated events and program-generated events",
      "description": "Externally-generated events and program-generated events: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "eb232430-ee0d-4300-9ced-cd07617bbd43",
      "label": "Separation of model, view, and controller",
      "cog_level": "Create",
      "title": "Separation of model, view, and controller",
      "description": "Separation of model, view, and controller: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "label": "Parallel and Distributed Computing ",
      "cog_level": "",
      "title": "Parallel and Distributed Computing ",
      "description": "Parallel and Distributed Computing : Parallel and distributed computing are two related but distinct approaches to leveraging multiple computing resources to solve computational tasks.",
      "node_type": "knowledge unit",
      "shape": "ellipse"
    },
    {
      "id": "47fc2793-3b04-4b8c-836c-77765087d0b0",
      "label": "Safety and liveness",
      "cog_level": "Create",
      "title": "Safety and liveness",
      "description": "Safety and liveness: Safety ensures that undesirable states or behaviors do not occur, while liveness ensures that desirable states or behaviors eventually occur.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "a954b211-0af0-4e62-b6fb-7da65fd0b843",
      "label": "Race conditions",
      "cog_level": "Create",
      "title": "Race conditions",
      "description": "Race conditions: Occur when the outcome of a program depends on the relative timing or interleaving of multiple concurrent executions.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "ff909ad6-be1e-4140-9b2e-11c2c4c1b2b2",
      "label": "Dependencies/preconditions",
      "cog_level": "Create",
      "title": "Dependencies/preconditions",
      "description": "Dependencies/preconditions: Conditions or requirements that must be satisfied before a certain operation can be performed.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "40c5e5b6-1244-4946-b38d-39cc0e5b5227",
      "label": "Fault models",
      "cog_level": "Create",
      "title": "Fault models",
      "description": "Fault models: Models that describe the types of faults or failures that can occur in a system.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "fe7e476d-0215-4e18-938e-dcebfe5b982f",
      "label": "Termination",
      "cog_level": "Create",
      "title": "Termination",
      "description": "Termination: Ensures that a program eventually halts or completes its execution.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "09cbb063-3fee-42ad-9feb-4f706a37762f",
      "label": "Parallel programming paradigms",
      "cog_level": "Create",
      "title": "Parallel programming paradigms",
      "description": "Parallel programming paradigms: Approaches or models for writing parallel programs, such as shared-memory multiprocessing, message passing, and data parallelism.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "0a796e06-c8d5-45fd-b81c-0fafe09e8274",
      "label": "Actor models",
      "cog_level": "Create",
      "title": "Actor models",
      "description": "Actor models: A programming paradigm where concurrent entities (actors) communicate via message passing.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "0785be08-2afb-403c-bd53-a051d9d67fee",
      "label": "Task",
      "cog_level": "Create",
      "title": "Task",
      "description": "Task: A unit of work or computation that can be executed concurrently with other tasks.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "efa453e7-1257-4c1c-a38d-9d914a64f561",
      "label": "Message passing",
      "cog_level": "Create",
      "title": "Message passing",
      "description": "Message passing: Communication mechanism where processes or threads exchange messages to synchronize and share data.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "e62d5868-7bf6-459e-a0bf-bc77f331dec7",
      "label": "Partitioned global address space",
      "cog_level": "Create",
      "title": "Partitioned global address space",
      "description": "Partitioned global address space: A parallel programming model where each processing unit has its own memory space, but can access data in the global address space.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "3ea58940-3dd7-4957-8d4f-6dc0e3f4356a",
      "label": "Procedural and reactive models",
      "cog_level": "Create",
      "title": "Procedural and reactive models",
      "description": "Procedural and reactive models: Procedural models define a sequence of steps to be executed, while reactive models respond to external stimuli or events.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "48c034b1-3bc3-4b5a-aed4-695f40cf9a4a",
      "label": "synchronous/asynchronous",
      "cog_level": "Create",
      "title": "synchronous/asynchronous",
      "description": "synchronous/asynchronous: Synchronous operations block until completion, while asynchronous operations allow the program to continue executing while the operation completes in the background.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "90ef1676-6b73-44a1-aea0-11ae4c40c9e0",
      "label": "programming absractions",
      "cog_level": "Create",
      "title": "programming absractions",
      "description": "programming absractions: Higher-level constructs or APIs that simplify parallel programming, such as futures, promises, and async/await.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "cf87a3ba-f520-4a97-ab9c-5f1003fe84f8",
      "label": "Data parallelism",
      "cog_level": "Create",
      "title": "Data parallelism",
      "description": "Data parallelism: Parallelization technique where the same operation is applied to multiple data elements concurrently.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "07b43cd5-a745-454a-a94c-9accf436bd37",
      "label": "Semantics",
      "cog_level": "Create",
      "title": "Semantics",
      "description": "Semantics: The meaning or interpretation of a program's behavior or execution.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "032bdad6-ad4a-4ac6-82a2-8d29db338170",
      "label": "Commutativity",
      "cog_level": "Create",
      "title": "Commutativity",
      "description": "Commutativity: Property where the order of operations does not affect the result.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "04d552c2-5921-46c3-b7a5-5ff9b1e50888",
      "label": "Ordering",
      "cog_level": "Create",
      "title": "Ordering",
      "description": "Ordering: Establishing a total or partial order among operations or events.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "88134a69-b2be-4b70-91a4-fb5933620166",
      "label": "Independence",
      "cog_level": "Create",
      "title": "Independence",
      "description": "Independence: Property where the execution of one operation does not affect the outcome of another operation.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "f3c2020f-2412-41b5-aab1-defab69bf979",
      "label": "Consistency",
      "cog_level": "Create",
      "title": "Consistency",
      "description": "Consistency: Ensures that concurrent executions produce results that are equivalent to some serial execution.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "34f76488-2a18-4ae3-8b9c-ed7fcf5ee7be",
      "label": "Atomicity",
      "cog_level": "Create",
      "title": "Atomicity",
      "description": "Atomicity: Property where a sequence of operations appears indivisible or all-or-nothing.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "e2f14e2b-e5ea-4c06-80b7-b96a50260405",
      "label": "Consensus",
      "cog_level": "Create",
      "title": "Consensus",
      "description": "Consensus: Agreement among multiple processes on a single value or decision.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "b5039170-b207-4860-a4f8-2c6ab58241b9",
      "label": "Execution control",
      "cog_level": "Create",
      "title": "Execution control",
      "description": "Execution control: Mechanisms for controlling the execution of concurrent operations, such as locks, synchronization primitives, and barriers.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "209276a1-1569-4a9f-b369-485ff1b37309",
      "label": "Locks",
      "cog_level": "Create",
      "title": "Locks",
      "description": "Locks: Synchronization mechanism used to restrict access to shared resources.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "b6b52fa9-6432-4ed4-ba30-2dd2677f8a1d",
      "label": "Async await",
      "cog_level": "Create",
      "title": "Async await",
      "description": "Async await: Language feature for asynchronous programming, where functions can pause execution until asynchronous operations complete.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "f09ba807-5396-4c33-adb5-b49a1a096bc2",
      "label": "Promises",
      "cog_level": "Create",
      "title": "Promises",
      "description": "Promises: Abstraction for representing asynchronous operations and their results.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "cd1fad26-9040-4acc-9b0d-e6d038efa5d3",
      "label": "Communication and coordination",
      "cog_level": "Create",
      "title": "Communication and coordination",
      "description": "Communication and coordination: Techniques for managing communication and synchronization between concurrent processes or threads.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "853ab059-5bcf-4854-90c4-ffe75630e132",
      "label": "Message-passing",
      "cog_level": "Create",
      "title": "Message-passing",
      "description": "Message-passing: A communication paradigm in concurrent programming where processes or threads communicate by sending and receiving messages.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "7b1cce7e-3361-4b39-b4fc-5380b6164465",
      "label": "Shared memory",
      "cog_level": "Create",
      "title": "Shared memory",
      "description": "Shared memory: Another communication paradigm where multiple processes or threads share a common address space",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "24eb70ae-de22-4a9a-9de2-29d492aa8afc",
      "label": "cobegin-coend",
      "cog_level": "Create",
      "title": "cobegin-coend",
      "description": "cobegin-coend: A construct used in concurrent programming to denote the beginning and end of a parallel block of code.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "b70bb652-7973-48f0-8076-7939902f9979",
      "label": "Monitors",
      "cog_level": "Create",
      "title": "Monitors",
      "description": "Monitors: A synchronization construct used to control access to shared resources in concurrent programming.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "58c1743c-79c8-4dcc-9698-42b4b9223332",
      "label": "Channels",
      "cog_level": "Create",
      "title": "Channels",
      "description": "Channels: Communication primitives for exchanging messages between concurrent entities.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "936eac8d-c0de-4932-a1d5-5147737920bd",
      "label": "Threads",
      "cog_level": "Create",
      "title": "Threads",
      "description": "Threads: Lightweight units of execution that can run concurrently within a process.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "35db71bf-a4d4-4a5f-9f3c-79c9a20413da",
      "label": "Guards",
      "cog_level": "Create",
      "title": "Guards",
      "description": "Guards: Conditions or predicates that control the execution of guarded blocks of code in concurrent systems.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "8684e0fd-ad99-456b-92ff-ae02d7c51c3b",
      "label": "Futures",
      "cog_level": "Understand",
      "title": "Futures",
      "description": "Futures: Futures are a programming abstraction commonly used in concurrent and asynchronous programming to represent the result of an asynchronous operation that hasn't completed yet.",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "06e73291-7b75-4a44-b811-0ad908166015",
      "label": "Language support for data parallelism such as forall, map/reduce",
      "cog_level": "Understand",
      "title": "Language support for data parallelism such as forall, map/reduce",
      "description": "Language support for data parallelism such as forall, map/reduce: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "4827d66b-2f18-48d3-9bea-3bcf228f66dd",
      "label": "Loop unrolling",
      "cog_level": "Understand",
      "title": "Loop unrolling",
      "description": "Loop unrolling: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "62c2cd89-2852-422e-b716-df276105bfc1",
      "label": "Effect of memory-consistency models on language semantics and correct code generation",
      "cog_level": "Understand",
      "title": "Effect of memory-consistency models on language semantics and correct code generation",
      "description": "Effect of memory-consistency models on language semantics and correct code generation: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "cbfdfd7e-19ad-49e0-9cce-aaf16a5af22f",
      "label": "Representational State Transfer Application",
      "cog_level": "Understand",
      "title": "Representational State Transfer Application",
      "description": "Representational State Transfer Application: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "ec32b31b-118a-49e1-819e-e4f98d62213f",
      "label": "Programming Interfaces (REST APIs)",
      "cog_level": "Understand",
      "title": "Programming Interfaces (REST APIs)",
      "description": "Programming Interfaces (REST APIs): ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "f5e75907-2d8e-401c-8229-e81f3977742a",
      "label": "Technologies and approaches: cloud computing, high performance computing, quantum computing, ubiquitous computing",
      "cog_level": "Understand",
      "title": "Technologies and approaches: cloud computing, high performance computing, quantum computing, ubiquitous computing",
      "description": "Technologies and approaches: cloud computing, high performance computing, quantum computing, ubiquitous computing: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "c9b3997b-b7c5-4558-af79-e04ba5861814",
      "label": "Overheads of message passing",
      "cog_level": "Understand",
      "title": "Overheads of message passing",
      "description": "Overheads of message passing: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "6ced7058-0e03-41e3-96e4-e2d5afef572c",
      "label": "Granularity of program for efficient exploitation of concurrency.",
      "cog_level": "Understand",
      "title": "Granularity of program for efficient exploitation of concurrency.",
      "description": "Granularity of program for efficient exploitation of concurrency.: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "2f53729e-22f8-46d9-8c25-f36688a546bf",
      "label": "Concurrency and other programming paradigms",
      "cog_level": "Understand",
      "title": "Concurrency and other programming paradigms",
      "description": "Concurrency and other programming paradigms: e.g., functional",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "label": "Type Systems",
      "cog_level": "Create",
      "title": "Type Systems",
      "description": "Type Systems: Type systems are a fundamental concept in programming languages and serve as a mechanism for classifying and enforcing the properties of data and expressions within a program.",
      "node_type": "knowledge unit",
      "shape": "ellipse"
    },
    {
      "id": "06f83697-491e-4788-94f9-f456e0585e54",
      "label": "A type as a set of values together with a set of operations",
      "cog_level": "Create",
      "title": "A type as a set of values together with a set of operations",
      "description": "A type as a set of values together with a set of operations: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "2cb8552f-5500-4592-87b9-9391869212ea",
      "label": "Primitive types ",
      "cog_level": "Create",
      "title": "Primitive types ",
      "description": "Primitive types : e.g., numbers, Booleans",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "1d5ca2f6-a045-4aef-8557-1a7a7346cc85",
      "label": "Compound types built from other types",
      "cog_level": "Create",
      "title": "Compound types built from other types",
      "description": "Compound types built from other types: (e.g., records, unions, arrays, lists, functions, references) using set operations",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "8d6767be-f8ad-4573-90ae-43a455e04845",
      "label": "Association of types tvariables, arguments, results, and fields",
      "cog_level": "Create",
      "title": "Association of types tvariables, arguments, results, and fields",
      "description": "Association of types tvariables, arguments, results, and fields: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "0d45a5a7-21ae-47df-8eba-19dfaa4854b7",
      "label": "Type safety as an aspect of program correctness",
      "cog_level": "Create",
      "title": "Type safety as an aspect of program correctness",
      "description": "Type safety as an aspect of program correctness: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "44e53595-ee55-45c8-ae8a-e3cf08ba7cdc",
      "label": "Type safety and errors caused by using values inconsistently given their intended types",
      "cog_level": "Create",
      "title": "Type safety and errors caused by using values inconsistently given their intended types",
      "description": "Type safety and errors caused by using values inconsistently given their intended types: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "3aa0f8f8-28ec-4bc1-86dd-2c084b3043d3",
      "label": "Statically-typed vs dynamically-typed programming languages",
      "cog_level": "Create",
      "title": "Statically-typed vs dynamically-typed programming languages",
      "description": "Statically-typed vs dynamically-typed programming languages: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "0476c87f-6839-4d7c-9500-1ad291dcc2b2",
      "label": "Type equivalence: structural vs name equivalence",
      "cog_level": "Create",
      "title": "Type equivalence: structural vs name equivalence",
      "description": "Type equivalence: structural vs name equivalence: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "6b9a12b2-fb04-430f-b94e-b2bc01684fe9",
      "label": "Goals and limitations of static and dynamic typing",
      "cog_level": "Create",
      "title": "Goals and limitations of static and dynamic typing",
      "description": "Goals and limitations of static and dynamic typing: Detecting and eliminating errors as early as possible",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "f9d13b51-2aeb-4fec-bcb9-c78a49e25ee2",
      "label": "Generic types (parametric polymorphism)",
      "cog_level": "Create",
      "title": "Generic types (parametric polymorphism)",
      "description": "Generic types (parametric polymorphism): ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "9ee7cfcb-c811-48f6-a153-56c2a6627f79",
      "label": "Definition and advantages of polymorphism",
      "cog_level": "Create",
      "title": "Definition and advantages of polymorphism",
      "description": "Definition and advantages of polymorphism: parametric, subtyping, overloading and coercion",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "ef03aa22-6638-4fb4-96f3-e8b542a3a342",
      "label": "Comparison of monomorphic and polymorphic types",
      "cog_level": "Create",
      "title": "Comparison of monomorphic and polymorphic types",
      "description": "Comparison of monomorphic and polymorphic types: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "8de813d4-b210-4dee-9285-c7694f1ecdac",
      "label": "Comparison with ad-hoc polymorphism (overloading) and subtype polymorphism",
      "cog_level": "Create",
      "title": "Comparison with ad-hoc polymorphism (overloading) and subtype polymorphism",
      "description": "Comparison with ad-hoc polymorphism (overloading) and subtype polymorphism: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "14db60fd-86c6-41c7-882f-5b4cd0334940",
      "label": "Generic parameters and typing",
      "cog_level": "Create",
      "title": "Generic parameters and typing",
      "description": "Generic parameters and typing: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "54a85ab3-4e19-4199-b511-7147543e8502",
      "label": "Use of generic libraries such as collectlons",
      "cog_level": "Create",
      "title": "Use of generic libraries such as collectlons",
      "description": "Use of generic libraries such as collectlons: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "3bdc76d0-0b6d-454e-a441-794aa602e05c",
      "label": "Comparison with ad hoc polymorphism (overloading) and subtype polymorphism",
      "cog_level": "Create",
      "title": "Comparison with ad hoc polymorphism (overloading) and subtype polymorphism",
      "description": "Comparison with ad hoc polymorphism (overloading) and subtype polymorphism: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "f71efeeb-c883-43aa-8d98-0d50001e77ba",
      "label": "Prescriptive vs. descriptive polymorphism",
      "cog_level": "Create",
      "title": "Prescriptive vs. descriptive polymorphism",
      "description": "Prescriptive vs. descriptive polymorphism: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "3b9f9370-fd2d-457a-8382-7681e1fb4f29",
      "label": "Implementation models of polymorphic types",
      "cog_level": "Create",
      "title": "Implementation models of polymorphic types",
      "description": "Implementation models of polymorphic types: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "label": "Complementary benefits of static and dynamic typing",
      "cog_level": "Create",
      "title": "Complementary benefits of static and dynamic typing",
      "description": "Complementary benefits of static and dynamic typing: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "eb981893-f574-4a70-ab6a-c5dc89c4da7d",
      "label": "Errors early vs. errors late/avoided",
      "cog_level": "Create",
      "title": "Errors early vs. errors late/avoided",
      "description": "Errors early vs. errors late/avoided: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "c3ed1003-1999-45c4-ac2d-1ee51d550dd8",
      "label": "Enforce invariants during code development and code maintenance vs. postpone typing decisions while prototyping and conveniently allow flexible coding patterns such as heterogeneous collections",
      "cog_level": "Create",
      "title": "Enforce invariants during code development and code maintenance vs. postpone typing decisions while prototyping and conveniently allow flexible coding patterns such as heterogeneous collections",
      "description": "Enforce invariants during code development and code maintenance vs. postpone typing decisions while prototyping and conveniently allow flexible coding patterns such as heterogeneous collections: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "17799510-4df3-4920-8ecd-4faecff4eeb6",
      "label": "Typing rules",
      "cog_level": "Create",
      "title": "Typing rules",
      "description": "Typing rules: Rules for function, product, and sum types",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "5de99532-3033-4a84-b0fe-85c96e546405",
      "label": "Alternative type systems such as Hindley-Miller and Grant-Reynolds type systems. ",
      "cog_level": "",
      "title": "Alternative type systems such as Hindley-Miller and Grant-Reynolds type systems. ",
      "description": "Alternative type systems such as Hindley-Miller and Grant-Reynolds type systems. : ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "e6fad8bd-769b-4ccd-ac05-24e0df5d3560",
      "label": "Avoid misuse of code vs. allow more code reuse",
      "cog_level": "Create",
      "title": "Avoid misuse of code vs. allow more code reuse",
      "description": "Avoid misuse of code vs. allow more code reuse: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "43e4575a-4f94-4274-a29a-4b86db041f70",
      "label": "Detect incomplete programs vs. allow incomplete programs trun",
      "cog_level": "Create",
      "title": "Detect incomplete programs vs. allow incomplete programs trun",
      "description": "Detect incomplete programs vs. allow incomplete programs trun: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "99baeb99-cdf9-4aef-b414-faef2b322448",
      "label": "Relationship tstatic analysis",
      "cog_level": "Create",
      "title": "Relationship tstatic analysis",
      "description": "Relationship tstatic analysis: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "5f91322a-c005-4ca8-90e8-523e44a2d60e",
      "label": "Decidability",
      "cog_level": "Create",
      "title": "Decidability",
      "description": "Decidability: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "10ac8785-5a65-4bc4-965f-895c27af467d",
      "label": "Use of sophisticated(complex) type systems, e.g.,Rust.",
      "cog_level": "Create",
      "title": "Use of sophisticated(complex) type systems, e.g.,Rust.",
      "description": "Use of sophisticated(complex) type systems, e.g.,Rust.: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "label": "Language Translation and Execution ",
      "cog_level": "",
      "title": "Language Translation and Execution ",
      "description": "Language Translation and Execution : Language translation and execution are essential processes in the lifecycle of a software program, enabling the transformation of human-readable code into machine-executable instructions. ",
      "node_type": "knowledge unit",
      "shape": "ellipse"
    },
    {
      "id": "c07e1d5a-dde8-4c4e-a5b5-95caa3e1a0e5",
      "label": "Interpretation vs. compilation tnative code vs. compilation tportable intermediate representation",
      "cog_level": "Understand",
      "title": "Interpretation vs. compilation tnative code vs. compilation tportable intermediate representation",
      "description": "Interpretation vs. compilation tnative code vs. compilation tportable intermediate representation: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "d386b38a-117c-4021-9715-0fb3846268fa",
      "label": "Language translation pipeline",
      "cog_level": "Understand",
      "title": "Language translation pipeline",
      "description": "Language translation pipeline: syntax analysis, parsing, optional type-checking, translation/code generation and optimization, linking, loading, execution",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "55b00a2a-4127-4997-bb92-c486439b9c1a",
      "label": "BNF and extended BNF representation of context-free grammar",
      "cog_level": "Understand",
      "title": "BNF and extended BNF representation of context-free grammar",
      "description": "BNF and extended BNF representation of context-free grammar: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "d44c2852-723f-4b61-9823-aa8b90ad9e14",
      "label": "Parse tree using a simple sentence ",
      "cog_level": "Understand",
      "title": "Parse tree using a simple sentence ",
      "description": "Parse tree using a simple sentence : such as arithmetic expression or if-then-else statement",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "5157ef7b-061e-4f2b-a705-22551f64ff1b",
      "label": "Ambiguity in Parsing due tlack of precedence order and resolution",
      "cog_level": "Understand",
      "title": "Ambiguity in Parsing due tlack of precedence order and resolution",
      "description": "Ambiguity in Parsing due tlack of precedence order and resolution: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "5def1900-d960-4801-ada6-1b676c605668",
      "label": "Execution as native code or within a virtual machine",
      "cog_level": "Understand",
      "title": "Execution as native code or within a virtual machine",
      "description": "Execution as native code or within a virtual machine: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "9da0e6cc-9461-4fb8-9290-bf31635ca4d4",
      "label": "Alternatives like dynamic loading and dynamic (or \"just-in-time\") code generation",
      "cog_level": "Understand",
      "title": "Alternatives like dynamic loading and dynamic (or \"just-in-time\") code generation",
      "description": "Alternatives like dynamic loading and dynamic (or \"just-in-time\") code generation: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "12bed9f7-9b26-468b-967d-b25724351a92",
      "label": "Control-flow diagrams using selection and iteration",
      "cog_level": "Understand",
      "title": "Control-flow diagrams using selection and iteration",
      "description": "Control-flow diagrams using selection and iteration: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "55f4be00-035f-4ea2-8027-2dce3217934d",
      "label": "Data structures for translation, execution, translation and code mobility ",
      "cog_level": "Understand",
      "title": "Data structures for translation, execution, translation and code mobility ",
      "description": "Data structures for translation, execution, translation and code mobility : such as stack, heap, aliasing (sharing using pointers), indexed sequence and string",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "6d7bc0e7-85f2-4a19-b387-0d692f075873",
      "label": "Direct, indirect and indexed access tmemory location",
      "cog_level": "Understand",
      "title": "Direct, indirect and indexed access tmemory location",
      "description": "Direct, indirect and indexed access tmemory location: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "58d5e23f-acbd-4ebf-b69c-5b3bb9f751d6",
      "label": "Runtime representation of data abstractions ",
      "cog_level": "Understand",
      "title": "Runtime representation of data abstractions ",
      "description": "Runtime representation of data abstractions : such as variables, arrays, vectors, records, pointer-based data elements such as linkedlists and trees, and objects",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "5a2172d2-228f-4a8d-a1f8-2a05cee2b3b5",
      "label": "Abstract low-level machine with simple instruction, stack and heap texplain translation and execution",
      "cog_level": "Understand",
      "title": "Abstract low-level machine with simple instruction, stack and heap texplain translation and execution",
      "description": "Abstract low-level machine with simple instruction, stack and heap texplain translation and execution: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "a66e6af1-4f95-4416-a309-96d6e6a27668",
      "label": "Run-time layout of memory",
      "cog_level": "Understand",
      "title": "Run-time layout of memory",
      "description": "Run-time layout of memory: activation record (with various pointers), static data, call-stack, heap",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "bdac3870-261a-4801-807d-b6b00d6bb878",
      "label": "Translating selection and iterative constructs tcontrol-flow diagrams",
      "cog_level": "Understand",
      "title": "Translating selection and iterative constructs tcontrol-flow diagrams",
      "description": "Translating selection and iterative constructs tcontrol-flow diagrams: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "00ef9035-f18e-427d-9a53-cf7c8f221b6f",
      "label": "Translating control-flow diagrams tlow level abstract code",
      "cog_level": "Understand",
      "title": "Translating control-flow diagrams tlow level abstract code",
      "description": "Translating control-flow diagrams tlow level abstract code: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "d32b2a04-af0b-4cef-b663-918d82b38465",
      "label": "Implementing loops, recursion, and tail calls",
      "cog_level": "Understand",
      "title": "Implementing loops, recursion, and tail calls",
      "description": "Implementing loops, recursion, and tail calls: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "b76bda39-2e25-4952-8564-62d35e1eae2d",
      "label": "Translating function/procedure calls and return from calls",
      "cog_level": "Understand",
      "title": "Translating function/procedure calls and return from calls",
      "description": "Translating function/procedure calls and return from calls: including different parameter passing mechanism using an abstract machine",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "fc4c964a-a928-496e-a656-81568bca11dc",
      "label": "Memory management",
      "cog_level": "Understand",
      "title": "Memory management",
      "description": "Memory management: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "4cafe6f6-b2dd-4b16-819e-4d42899635d7",
      "label": "Low level allocation and accessing of high-level data structures",
      "cog_level": "Understand",
      "title": "Low level allocation and accessing of high-level data structures",
      "description": "Low level allocation and accessing of high-level data structures: such as basic data types, n-dimensional array, vector, record, and objects",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "93ffea62-ed1c-4d75-84e4-d0800002d4d7",
      "label": "Return from procedure",
      "cog_level": "Understand",
      "title": "Return from procedure",
      "description": "Return from procedure: as automatic deallocation mechanism for local data elements in the stack",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "c7e29509-5ad2-404e-85d9-c211161bbcbe",
      "label": "Manual memory management",
      "cog_level": "Understand",
      "title": "Manual memory management",
      "description": "Manual memory management: allocating, de-allocating, and reusing heap memory",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "4dec7ca3-31c3-431b-969a-240053c48023",
      "label": "Automated memory management",
      "cog_level": "Understand",
      "title": "Automated memory management",
      "description": "Automated memory management: garbage collection as an automated technique using the notion of reachability",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "label": "Program Representation",
      "cog_level": "Understand",
      "title": "Program Representation",
      "description": "Program Representation: Program representation refers to the internal structure or format used to represent a software program within a computer system.",
      "node_type": "knowledge unit",
      "shape": "ellipse"
    },
    {
      "id": "2c956078-c76e-488c-98da-be72a6ca21dc",
      "label": "BNF and regular expressions",
      "cog_level": "Understand",
      "title": "BNF and regular expressions",
      "description": "BNF and regular expressions: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "010ee6ad-4b08-494e-8dba-23b5da4803b0",
      "label": "Programs that take (other) programs as input",
      "cog_level": "Understand",
      "title": "Programs that take (other) programs as input",
      "description": "Programs that take (other) programs as input: such as interpreters, compilers, typecheckers, documentation generators",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "05222c06-183b-4337-b15c-9c565e8868a8",
      "label": "Components of a language",
      "cog_level": "Understand",
      "title": "Components of a language",
      "description": "Components of a language: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "2c94b3b0-59da-47ab-bef6-f3dcc3c78629",
      "label": "Definitions of alphabets, delimiters, sentences, syntax and semantics",
      "cog_level": "Understand",
      "title": "Definitions of alphabets, delimiters, sentences, syntax and semantics",
      "description": "Definitions of alphabets, delimiters, sentences, syntax and semantics: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "5938a344-42c6-434e-821a-f3a958d1cf86",
      "label": "Synatx vs. semantics",
      "cog_level": "Understand",
      "title": "Synatx vs. semantics",
      "description": "Synatx vs. semantics: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "ef15eb8d-40fa-47d4-ac73-f6d576adb748",
      "label": "Types of semantics",
      "cog_level": "Understand",
      "title": "Types of semantics",
      "description": "Types of semantics: operational, axiomatic, denotational, behavioral; define and use abstract syntax trees; contrast with concrete ssyntaxyntax",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "d272b1d6-454a-451b-b462-ce0c257469ba",
      "label": "Program as a set of non-ambiguous meaningful sentences",
      "cog_level": "Understand",
      "title": "Program as a set of non-ambiguous meaningful sentences",
      "description": "Program as a set of non-ambiguous meaningful sentences: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "3285c57a-6dac-4239-89b1-c8b316260437",
      "label": "Basic programming abstractions",
      "cog_level": "Understand",
      "title": "Basic programming abstractions",
      "description": "Basic programming abstractions: constants, variables, declarations (including nested declarations), command, expression, assignment, selection, definite and indefinite iteration, iterators, function, procedure, modules, exception handling",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "8a2e3636-ca2e-46d6-96c2-b968e13e7796",
      "label": "Mutable vs.immutable variables",
      "cog_level": "Understand",
      "title": "Mutable vs.immutable variables",
      "description": "Mutable vs.immutable variables: advantages and disadvantages of reusing existing memory location vs. advantages of copying and keeping old values; storing partial computation vs. recomputation",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "40e1471d-cb17-4694-b1a2-1409abd189f1",
      "label": "L-values and R-values",
      "cog_level": "Understand",
      "title": "L-values and R-values",
      "description": "L-values and R-values: mapping mutable variable-name to L-values; mapping immutable variable-names to R-values",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "37acff28-4342-4251-a590-78fa89dbf0c3",
      "label": "Types of variables",
      "cog_level": "Understand",
      "title": "Types of variables",
      "description": "Types of variables: static, local, nonlocal, global; need and issues with nonlocal and global variables",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "b8925c93-5f63-44bb-8739-b1d8a1d42487",
      "label": "Scope rules",
      "cog_level": "Understand",
      "title": "Scope rules",
      "description": "Scope rules: static vs. dynamic; visibility of variables; side-effects",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "cb093533-922b-4eb1-9eb8-1c6e6c7837c8",
      "label": "Environment vs. store and their properties",
      "cog_level": "Understand",
      "title": "Environment vs. store and their properties",
      "description": "Environment vs. store and their properties: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "02480823-8933-4197-89c5-e780b5e585e9",
      "label": "Data and control abstraction",
      "cog_level": "Understand",
      "title": "Data and control abstraction",
      "description": "Data and control abstraction: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "7cea5a08-f2e5-4610-9c90-d088215bbcf9",
      "label": "Mechanisms for information exchange between program units",
      "cog_level": "Understand",
      "title": "Mechanisms for information exchange between program units",
      "description": "Mechanisms for information exchange between program units: nonlocal variables, global variables, parameter passing, import-export between modules",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "6b9f7816-0e80-4be7-bca1-e201fe40813d",
      "label": "Types of parameter passing with simple illustrations and comparison",
      "cog_level": "Understand",
      "title": "Types of parameter passing with simple illustrations and comparison",
      "description": "Types of parameter passing with simple illustrations and comparison: call by value, call by reference, call by value-result, call by name, call by need and their variations",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "48d4b766-c529-4356-91bc-fdcfb1b765f0",
      "label": "Side-effects induced by nonlocal variables, global variables and aliased variables",
      "cog_level": "Understand",
      "title": "Side-effects induced by nonlocal variables, global variables and aliased variables",
      "description": "Side-effects induced by nonlocal variables, global variables and aliased variables: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "608b950a-ab69-4b8f-b38e-7eda4d80ba91",
      "label": "Data structures trepresent code for execution, translation, or transmission",
      "cog_level": "Understand",
      "title": "Data structures trepresent code for execution, translation, or transmission",
      "description": "Data structures trepresent code for execution, translation, or transmission: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "b3080d5a-33fd-4a47-943c-d5674eb1573f",
      "label": "Low level instruction representation",
      "cog_level": "Understand",
      "title": "Low level instruction representation",
      "description": "Low level instruction representation: such as virtual machine instructions, assembly language, and binary representation",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "7635cb34-6295-4b41-bb06-2adc809b50a6",
      "label": "Lambda calculus, variable binding, and variable renaming.",
      "cog_level": "Understand",
      "title": "Lambda calculus, variable binding, and variable renaming.",
      "description": "Lambda calculus, variable binding, and variable renaming.: ",
      "node_type": "knowledge point",
      "shape": "box"
    },
    {
      "id": "9d2785ca-d069-4f01-99c2-a854e67bfb14",
      "label": "String-based mobility in mobile coding.",
      "cog_level": "Understand",
      "title": "String-based mobility in mobile coding.",
      "description": "String-based mobility in mobile coding.: ",
      "node_type": "knowledge point",
      "shape": "box"
    }
  ],
  "edges": [
    {
      "from": "b79f9206-d473-4fcc-859c-d2566daa6cef",
      "to": "58567f7b-095f-4882-be20-8106539b166b",
      "title": ""
    },
    {
      "from": "b79f9206-d473-4fcc-859c-d2566daa6cef",
      "to": "22994eb3-2812-4d16-8565-1bcbc3f11a8f",
      "title": ""
    },
    {
      "from": "b79f9206-d473-4fcc-859c-d2566daa6cef",
      "to": "c4d6ad8e-6551-43a4-93d7-79fcd9fcd0df",
      "title": ""
    },
    {
      "from": "b79f9206-d473-4fcc-859c-d2566daa6cef",
      "to": "20934836-3b5b-498b-a0f5-4fe76b5eb285",
      "title": ""
    },
    {
      "from": "9c9fb42d-7ced-4007-ae48-1c7959abbe3f",
      "to": "e8121d87-1024-46c9-986a-bcc718ccd77a",
      "title": ""
    },
    {
      "from": "e8121d87-1024-46c9-986a-bcc718ccd77a",
      "to": "f8fea7bc-1104-457c-980b-4afd776f9dff",
      "title": ""
    },
    {
      "from": "f8fea7bc-1104-457c-980b-4afd776f9dff",
      "to": "af0eca93-c0c8-43ec-a4dd-995b1ee8ead6",
      "title": ""
    },
    {
      "from": "f8fea7bc-1104-457c-980b-4afd776f9dff",
      "to": "76c572db-7c1d-4e7c-acfb-d935b653cb4b",
      "title": ""
    },
    {
      "from": "f8fea7bc-1104-457c-980b-4afd776f9dff",
      "to": "5a4867f6-3679-4a6c-8902-2b1a34b1165e",
      "title": ""
    },
    {
      "from": "e8121d87-1024-46c9-986a-bcc718ccd77a",
      "to": "38c5f311-6cc1-4eb4-b649-e08d9e7b0394",
      "title": ""
    },
    {
      "from": "38c5f311-6cc1-4eb4-b649-e08d9e7b0394",
      "to": "4ecfbe4f-4d61-4632-8e38-4c3eeea9f248",
      "title": ""
    },
    {
      "from": "38c5f311-6cc1-4eb4-b649-e08d9e7b0394",
      "to": "d3c50462-f55b-41fc-b46c-4364927b6290",
      "title": ""
    },
    {
      "from": "38c5f311-6cc1-4eb4-b649-e08d9e7b0394",
      "to": "749ac468-d439-4671-a82e-6016068b582a",
      "title": ""
    },
    {
      "from": "e8121d87-1024-46c9-986a-bcc718ccd77a",
      "to": "e27b8ea4-8876-440c-a36a-4551083f0f5e",
      "title": ""
    },
    {
      "from": "e27b8ea4-8876-440c-a36a-4551083f0f5e",
      "to": "1b67cc91-02da-476a-947c-4b7df2542177",
      "title": ""
    },
    {
      "from": "e27b8ea4-8876-440c-a36a-4551083f0f5e",
      "to": "e263d984-1fbe-43a0-bc50-7fea18a976c5",
      "title": ""
    },
    {
      "from": "e8121d87-1024-46c9-986a-bcc718ccd77a",
      "to": "6cf6d9cd-b9cc-4101-adcd-1ae86cb363fa",
      "title": ""
    },
    {
      "from": "e8121d87-1024-46c9-986a-bcc718ccd77a",
      "to": "4c3ae244-2440-410f-9aff-b2b98e0e6177",
      "title": ""
    },
    {
      "from": "4c3ae244-2440-410f-9aff-b2b98e0e6177",
      "to": "0b96684e-54ed-4bb9-93d8-467cde7a65bd",
      "title": ""
    },
    {
      "from": "4c3ae244-2440-410f-9aff-b2b98e0e6177",
      "to": "2442dc79-b73d-407a-badb-b4bc3dd21539",
      "title": ""
    },
    {
      "from": "4c3ae244-2440-410f-9aff-b2b98e0e6177",
      "to": "63daf489-c95d-4c4e-83c5-3b2339154221",
      "title": ""
    },
    {
      "from": "4c3ae244-2440-410f-9aff-b2b98e0e6177",
      "to": "56e013e6-9dbd-48bd-ba10-70b11ef2bfe9",
      "title": ""
    },
    {
      "from": "e8121d87-1024-46c9-986a-bcc718ccd77a",
      "to": "c6cbad8b-053b-4166-bf72-4165e3920a23",
      "title": ""
    },
    {
      "from": "9c9fb42d-7ced-4007-ae48-1c7959abbe3f",
      "to": "4bb34ebd-307b-4ad5-ba7f-98f0271627b8",
      "title": ""
    },
    {
      "from": "4bb34ebd-307b-4ad5-ba7f-98f0271627b8",
      "to": "3f99f224-0a3c-44a1-9c1e-dd62f7911121",
      "title": ""
    },
    {
      "from": "4bb34ebd-307b-4ad5-ba7f-98f0271627b8",
      "to": "b1dc4bd6-8b99-452d-8864-829e28325a6f",
      "title": ""
    },
    {
      "from": "4bb34ebd-307b-4ad5-ba7f-98f0271627b8",
      "to": "63e2f2d1-3111-4a3e-97c5-5fda6d0d3790",
      "title": ""
    },
    {
      "from": "4bb34ebd-307b-4ad5-ba7f-98f0271627b8",
      "to": "5681ca05-7b8d-482b-870a-83522080ec70",
      "title": ""
    },
    {
      "from": "4bb34ebd-307b-4ad5-ba7f-98f0271627b8",
      "to": "23e883e1-ac8f-4357-b9ee-d49434e67912",
      "title": ""
    },
    {
      "from": "4bb34ebd-307b-4ad5-ba7f-98f0271627b8",
      "to": "5ec2f2ae-9a50-4dcf-9417-d77c9b9423d0",
      "title": ""
    },
    {
      "from": "4bb34ebd-307b-4ad5-ba7f-98f0271627b8",
      "to": "ad06a372-6c29-48db-b660-5ad4fa679007",
      "title": ""
    },
    {
      "from": "4bb34ebd-307b-4ad5-ba7f-98f0271627b8",
      "to": "e7745503-b20a-4842-9c92-cde4e4185fe4",
      "title": ""
    },
    {
      "from": "9c9fb42d-7ced-4007-ae48-1c7959abbe3f",
      "to": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "47d4f49c-0bb1-4c97-90c6-80a6f3490703",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "30190b4e-bc9e-4cc4-8b11-835211e2c6f8",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "43a40fab-124a-4c22-8e08-dcf454749365",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "5dd82635-5ded-4628-ae7b-df19e76d5a10",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "fec26353-d976-4059-ab7a-5c9e816c844a",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "c05812f0-4943-4353-8cd9-5a22967dccef",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "c77372f1-2ccc-4baf-8ba4-5a81747f4272",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "a426d4a8-0a24-43ad-9743-7376878c8804",
      "title": ""
    },
    {
      "from": "a426d4a8-0a24-43ad-9743-7376878c8804",
      "to": "6663a341-a41b-472a-b440-2820e644d7fc",
      "title": ""
    },
    {
      "from": "a426d4a8-0a24-43ad-9743-7376878c8804",
      "to": "933071cc-7efb-4440-914b-2b3428b4367f",
      "title": ""
    },
    {
      "from": "a426d4a8-0a24-43ad-9743-7376878c8804",
      "to": "2522803e-3374-4b3a-b754-0cd5d702d168",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "1ffdec6a-6102-43d8-99b8-c491c52507f4",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "cd03f3f7-3a17-4df7-ac17-89de46b56141",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "d7cc8581-c669-44ba-b7d6-4afdd67e7d9a",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "d33ac02e-7b48-4762-97d6-fc720b2f30b7",
      "title": ""
    },
    {
      "from": "e4ab5a48-d98a-46c4-97f1-b734c72be8d6",
      "to": "605b96a4-4ea4-4252-ab67-1afdf91045f7",
      "title": ""
    },
    {
      "from": "9c9fb42d-7ced-4007-ae48-1c7959abbe3f",
      "to": "d9defd3e-dcfc-47c9-9493-2328bdf9f238",
      "title": ""
    },
    {
      "from": "d9defd3e-dcfc-47c9-9493-2328bdf9f238",
      "to": "bdf69e75-54b6-4205-8acd-3a782cb3bd24",
      "title": ""
    },
    {
      "from": "d9defd3e-dcfc-47c9-9493-2328bdf9f238",
      "to": "7822cfd4-9cc1-4f88-a416-4fb0b37fd906",
      "title": ""
    },
    {
      "from": "d9defd3e-dcfc-47c9-9493-2328bdf9f238",
      "to": "8c8be7c8-7c85-4965-8848-19e349111e2f",
      "title": ""
    },
    {
      "from": "d9defd3e-dcfc-47c9-9493-2328bdf9f238",
      "to": "4e9e56c6-2e84-4cba-b00a-a6f5b0d24e8b",
      "title": ""
    },
    {
      "from": "d9defd3e-dcfc-47c9-9493-2328bdf9f238",
      "to": "2cbff540-3634-4bc8-899e-d7ace1989e71",
      "title": ""
    },
    {
      "from": "d9defd3e-dcfc-47c9-9493-2328bdf9f238",
      "to": "ef1c2a34-46c0-4cc2-8af2-b59dcf7f44c9",
      "title": ""
    },
    {
      "from": "ef1c2a34-46c0-4cc2-8af2-b59dcf7f44c9",
      "to": "34db2707-11d5-486a-9d00-4998d8fc7a2e",
      "title": ""
    },
    {
      "from": "ef1c2a34-46c0-4cc2-8af2-b59dcf7f44c9",
      "to": "e5bbf87c-abca-41f1-8caa-3073cdd73251",
      "title": ""
    },
    {
      "from": "ef1c2a34-46c0-4cc2-8af2-b59dcf7f44c9",
      "to": "733a48e8-2cca-444c-be9a-771d27d37a93",
      "title": ""
    },
    {
      "from": "d9defd3e-dcfc-47c9-9493-2328bdf9f238",
      "to": "eb232430-ee0d-4300-9ced-cd07617bbd43",
      "title": ""
    },
    {
      "from": "9c9fb42d-7ced-4007-ae48-1c7959abbe3f",
      "to": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "47fc2793-3b04-4b8c-836c-77765087d0b0",
      "title": ""
    },
    {
      "from": "47fc2793-3b04-4b8c-836c-77765087d0b0",
      "to": "a954b211-0af0-4e62-b6fb-7da65fd0b843",
      "title": ""
    },
    {
      "from": "47fc2793-3b04-4b8c-836c-77765087d0b0",
      "to": "ff909ad6-be1e-4140-9b2e-11c2c4c1b2b2",
      "title": ""
    },
    {
      "from": "47fc2793-3b04-4b8c-836c-77765087d0b0",
      "to": "40c5e5b6-1244-4946-b38d-39cc0e5b5227",
      "title": ""
    },
    {
      "from": "47fc2793-3b04-4b8c-836c-77765087d0b0",
      "to": "fe7e476d-0215-4e18-938e-dcebfe5b982f",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "09cbb063-3fee-42ad-9feb-4f706a37762f",
      "title": ""
    },
    {
      "from": "09cbb063-3fee-42ad-9feb-4f706a37762f",
      "to": "0a796e06-c8d5-45fd-b81c-0fafe09e8274",
      "title": ""
    },
    {
      "from": "09cbb063-3fee-42ad-9feb-4f706a37762f",
      "to": "0785be08-2afb-403c-bd53-a051d9d67fee",
      "title": ""
    },
    {
      "from": "09cbb063-3fee-42ad-9feb-4f706a37762f",
      "to": "efa453e7-1257-4c1c-a38d-9d914a64f561",
      "title": ""
    },
    {
      "from": "09cbb063-3fee-42ad-9feb-4f706a37762f",
      "to": "e62d5868-7bf6-459e-a0bf-bc77f331dec7",
      "title": ""
    },
    {
      "from": "09cbb063-3fee-42ad-9feb-4f706a37762f",
      "to": "3ea58940-3dd7-4957-8d4f-6dc0e3f4356a",
      "title": ""
    },
    {
      "from": "09cbb063-3fee-42ad-9feb-4f706a37762f",
      "to": "48c034b1-3bc3-4b5a-aed4-695f40cf9a4a",
      "title": ""
    },
    {
      "from": "09cbb063-3fee-42ad-9feb-4f706a37762f",
      "to": "90ef1676-6b73-44a1-aea0-11ae4c40c9e0",
      "title": ""
    },
    {
      "from": "09cbb063-3fee-42ad-9feb-4f706a37762f",
      "to": "cf87a3ba-f520-4a97-ab9c-5f1003fe84f8",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "07b43cd5-a745-454a-a94c-9accf436bd37",
      "title": ""
    },
    {
      "from": "07b43cd5-a745-454a-a94c-9accf436bd37",
      "to": "032bdad6-ad4a-4ac6-82a2-8d29db338170",
      "title": ""
    },
    {
      "from": "07b43cd5-a745-454a-a94c-9accf436bd37",
      "to": "04d552c2-5921-46c3-b7a5-5ff9b1e50888",
      "title": ""
    },
    {
      "from": "07b43cd5-a745-454a-a94c-9accf436bd37",
      "to": "88134a69-b2be-4b70-91a4-fb5933620166",
      "title": ""
    },
    {
      "from": "07b43cd5-a745-454a-a94c-9accf436bd37",
      "to": "f3c2020f-2412-41b5-aab1-defab69bf979",
      "title": ""
    },
    {
      "from": "07b43cd5-a745-454a-a94c-9accf436bd37",
      "to": "34f76488-2a18-4ae3-8b9c-ed7fcf5ee7be",
      "title": ""
    },
    {
      "from": "07b43cd5-a745-454a-a94c-9accf436bd37",
      "to": "e2f14e2b-e5ea-4c06-80b7-b96a50260405",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "b5039170-b207-4860-a4f8-2c6ab58241b9",
      "title": ""
    },
    {
      "from": "b5039170-b207-4860-a4f8-2c6ab58241b9",
      "to": "209276a1-1569-4a9f-b369-485ff1b37309",
      "title": ""
    },
    {
      "from": "b5039170-b207-4860-a4f8-2c6ab58241b9",
      "to": "b6b52fa9-6432-4ed4-ba30-2dd2677f8a1d",
      "title": ""
    },
    {
      "from": "b5039170-b207-4860-a4f8-2c6ab58241b9",
      "to": "f09ba807-5396-4c33-adb5-b49a1a096bc2",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "cd1fad26-9040-4acc-9b0d-e6d038efa5d3",
      "title": ""
    },
    {
      "from": "cd1fad26-9040-4acc-9b0d-e6d038efa5d3",
      "to": "853ab059-5bcf-4854-90c4-ffe75630e132",
      "title": ""
    },
    {
      "from": "cd1fad26-9040-4acc-9b0d-e6d038efa5d3",
      "to": "7b1cce7e-3361-4b39-b4fc-5380b6164465",
      "title": ""
    },
    {
      "from": "cd1fad26-9040-4acc-9b0d-e6d038efa5d3",
      "to": "24eb70ae-de22-4a9a-9de2-29d492aa8afc",
      "title": ""
    },
    {
      "from": "cd1fad26-9040-4acc-9b0d-e6d038efa5d3",
      "to": "b70bb652-7973-48f0-8076-7939902f9979",
      "title": ""
    },
    {
      "from": "cd1fad26-9040-4acc-9b0d-e6d038efa5d3",
      "to": "58c1743c-79c8-4dcc-9698-42b4b9223332",
      "title": ""
    },
    {
      "from": "cd1fad26-9040-4acc-9b0d-e6d038efa5d3",
      "to": "936eac8d-c0de-4932-a1d5-5147737920bd",
      "title": ""
    },
    {
      "from": "cd1fad26-9040-4acc-9b0d-e6d038efa5d3",
      "to": "35db71bf-a4d4-4a5f-9f3c-79c9a20413da",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "8684e0fd-ad99-456b-92ff-ae02d7c51c3b",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "06e73291-7b75-4a44-b811-0ad908166015",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "4827d66b-2f18-48d3-9bea-3bcf228f66dd",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "62c2cd89-2852-422e-b716-df276105bfc1",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "cbfdfd7e-19ad-49e0-9cce-aaf16a5af22f",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "ec32b31b-118a-49e1-819e-e4f98d62213f",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "f5e75907-2d8e-401c-8229-e81f3977742a",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "c9b3997b-b7c5-4558-af79-e04ba5861814",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "6ced7058-0e03-41e3-96e4-e2d5afef572c",
      "title": ""
    },
    {
      "from": "9c949eb7-a724-435d-b3bb-05dfedc2dbcd",
      "to": "2f53729e-22f8-46d9-8c25-f36688a546bf",
      "title": ""
    },
    {
      "from": "9c9fb42d-7ced-4007-ae48-1c7959abbe3f",
      "to": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "title": ""
    },
    {
      "from": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "to": "06f83697-491e-4788-94f9-f456e0585e54",
      "title": ""
    },
    {
      "from": "06f83697-491e-4788-94f9-f456e0585e54",
      "to": "2cb8552f-5500-4592-87b9-9391869212ea",
      "title": ""
    },
    {
      "from": "06f83697-491e-4788-94f9-f456e0585e54",
      "to": "1d5ca2f6-a045-4aef-8557-1a7a7346cc85",
      "title": ""
    },
    {
      "from": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "to": "8d6767be-f8ad-4573-90ae-43a455e04845",
      "title": ""
    },
    {
      "from": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "to": "0d45a5a7-21ae-47df-8eba-19dfaa4854b7",
      "title": ""
    },
    {
      "from": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "to": "44e53595-ee55-45c8-ae8a-e3cf08ba7cdc",
      "title": ""
    },
    {
      "from": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "to": "3aa0f8f8-28ec-4bc1-86dd-2c084b3043d3",
      "title": ""
    },
    {
      "from": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "to": "0476c87f-6839-4d7c-9500-1ad291dcc2b2",
      "title": ""
    },
    {
      "from": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "to": "6b9a12b2-fb04-430f-b94e-b2bc01684fe9",
      "title": ""
    },
    {
      "from": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "to": "f9d13b51-2aeb-4fec-bcb9-c78a49e25ee2",
      "title": ""
    },
    {
      "from": "f9d13b51-2aeb-4fec-bcb9-c78a49e25ee2",
      "to": "9ee7cfcb-c811-48f6-a153-56c2a6627f79",
      "title": ""
    },
    {
      "from": "f9d13b51-2aeb-4fec-bcb9-c78a49e25ee2",
      "to": "ef03aa22-6638-4fb4-96f3-e8b542a3a342",
      "title": ""
    },
    {
      "from": "f9d13b51-2aeb-4fec-bcb9-c78a49e25ee2",
      "to": "8de813d4-b210-4dee-9285-c7694f1ecdac",
      "title": ""
    },
    {
      "from": "f9d13b51-2aeb-4fec-bcb9-c78a49e25ee2",
      "to": "14db60fd-86c6-41c7-882f-5b4cd0334940",
      "title": ""
    },
    {
      "from": "f9d13b51-2aeb-4fec-bcb9-c78a49e25ee2",
      "to": "54a85ab3-4e19-4199-b511-7147543e8502",
      "title": ""
    },
    {
      "from": "f9d13b51-2aeb-4fec-bcb9-c78a49e25ee2",
      "to": "3bdc76d0-0b6d-454e-a441-794aa602e05c",
      "title": ""
    },
    {
      "from": "f9d13b51-2aeb-4fec-bcb9-c78a49e25ee2",
      "to": "f71efeeb-c883-43aa-8d98-0d50001e77ba",
      "title": ""
    },
    {
      "from": "f9d13b51-2aeb-4fec-bcb9-c78a49e25ee2",
      "to": "3b9f9370-fd2d-457a-8382-7681e1fb4f29",
      "title": ""
    },
    {
      "from": "fefff9d4-6e1d-4f86-a5a1-3938eb1e511a",
      "to": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "title": ""
    },
    {
      "from": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "to": "eb981893-f574-4a70-ab6a-c5dc89c4da7d",
      "title": ""
    },
    {
      "from": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "to": "c3ed1003-1999-45c4-ac2d-1ee51d550dd8",
      "title": ""
    },
    {
      "from": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "to": "17799510-4df3-4920-8ecd-4faecff4eeb6",
      "title": ""
    },
    {
      "from": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "to": "5de99532-3033-4a84-b0fe-85c96e546405",
      "title": ""
    },
    {
      "from": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "to": "e6fad8bd-769b-4ccd-ac05-24e0df5d3560",
      "title": ""
    },
    {
      "from": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "to": "43e4575a-4f94-4274-a29a-4b86db041f70",
      "title": ""
    },
    {
      "from": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "to": "99baeb99-cdf9-4aef-b414-faef2b322448",
      "title": ""
    },
    {
      "from": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "to": "5f91322a-c005-4ca8-90e8-523e44a2d60e",
      "title": ""
    },
    {
      "from": "9809fadd-3863-4fae-b9be-4cf4d787ff65",
      "to": "10ac8785-5a65-4bc4-965f-895c27af467d",
      "title": ""
    },
    {
      "from": "9c9fb42d-7ced-4007-ae48-1c7959abbe3f",
      "to": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "title": ""
    },
    {
      "from": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "to": "c07e1d5a-dde8-4c4e-a5b5-95caa3e1a0e5",
      "title": ""
    },
    {
      "from": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "to": "d386b38a-117c-4021-9715-0fb3846268fa",
      "title": ""
    },
    {
      "from": "d386b38a-117c-4021-9715-0fb3846268fa",
      "to": "55b00a2a-4127-4997-bb92-c486439b9c1a",
      "title": ""
    },
    {
      "from": "d386b38a-117c-4021-9715-0fb3846268fa",
      "to": "d44c2852-723f-4b61-9823-aa8b90ad9e14",
      "title": ""
    },
    {
      "from": "d386b38a-117c-4021-9715-0fb3846268fa",
      "to": "5157ef7b-061e-4f2b-a705-22551f64ff1b",
      "title": ""
    },
    {
      "from": "d386b38a-117c-4021-9715-0fb3846268fa",
      "to": "5def1900-d960-4801-ada6-1b676c605668",
      "title": ""
    },
    {
      "from": "d386b38a-117c-4021-9715-0fb3846268fa",
      "to": "9da0e6cc-9461-4fb8-9290-bf31635ca4d4",
      "title": ""
    },
    {
      "from": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "to": "12bed9f7-9b26-468b-967d-b25724351a92",
      "title": ""
    },
    {
      "from": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "to": "55f4be00-035f-4ea2-8027-2dce3217934d",
      "title": ""
    },
    {
      "from": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "to": "6d7bc0e7-85f2-4a19-b387-0d692f075873",
      "title": ""
    },
    {
      "from": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "to": "58d5e23f-acbd-4ebf-b69c-5b3bb9f751d6",
      "title": ""
    },
    {
      "from": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "to": "5a2172d2-228f-4a8d-a1f8-2a05cee2b3b5",
      "title": ""
    },
    {
      "from": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "to": "a66e6af1-4f95-4416-a309-96d6e6a27668",
      "title": ""
    },
    {
      "from": "a66e6af1-4f95-4416-a309-96d6e6a27668",
      "to": "bdac3870-261a-4801-807d-b6b00d6bb878",
      "title": ""
    },
    {
      "from": "a66e6af1-4f95-4416-a309-96d6e6a27668",
      "to": "00ef9035-f18e-427d-9a53-cf7c8f221b6f",
      "title": ""
    },
    {
      "from": "a66e6af1-4f95-4416-a309-96d6e6a27668",
      "to": "d32b2a04-af0b-4cef-b663-918d82b38465",
      "title": ""
    },
    {
      "from": "a66e6af1-4f95-4416-a309-96d6e6a27668",
      "to": "b76bda39-2e25-4952-8564-62d35e1eae2d",
      "title": ""
    },
    {
      "from": "4388e23f-312c-4b0e-b43e-027d881c86b7",
      "to": "fc4c964a-a928-496e-a656-81568bca11dc",
      "title": ""
    },
    {
      "from": "fc4c964a-a928-496e-a656-81568bca11dc",
      "to": "4cafe6f6-b2dd-4b16-819e-4d42899635d7",
      "title": ""
    },
    {
      "from": "fc4c964a-a928-496e-a656-81568bca11dc",
      "to": "93ffea62-ed1c-4d75-84e4-d0800002d4d7",
      "title": ""
    },
    {
      "from": "fc4c964a-a928-496e-a656-81568bca11dc",
      "to": "c7e29509-5ad2-404e-85d9-c211161bbcbe",
      "title": ""
    },
    {
      "from": "fc4c964a-a928-496e-a656-81568bca11dc",
      "to": "4dec7ca3-31c3-431b-969a-240053c48023",
      "title": ""
    },
    {
      "from": "9c9fb42d-7ced-4007-ae48-1c7959abbe3f",
      "to": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "2c956078-c76e-488c-98da-be72a6ca21dc",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "010ee6ad-4b08-494e-8dba-23b5da4803b0",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "05222c06-183b-4337-b15c-9c565e8868a8",
      "title": ""
    },
    {
      "from": "05222c06-183b-4337-b15c-9c565e8868a8",
      "to": "2c94b3b0-59da-47ab-bef6-f3dcc3c78629",
      "title": ""
    },
    {
      "from": "05222c06-183b-4337-b15c-9c565e8868a8",
      "to": "5938a344-42c6-434e-821a-f3a958d1cf86",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "ef15eb8d-40fa-47d4-ac73-f6d576adb748",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "d272b1d6-454a-451b-b462-ce0c257469ba",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "3285c57a-6dac-4239-89b1-c8b316260437",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "8a2e3636-ca2e-46d6-96c2-b968e13e7796",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "40e1471d-cb17-4694-b1a2-1409abd189f1",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "37acff28-4342-4251-a590-78fa89dbf0c3",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "b8925c93-5f63-44bb-8739-b1d8a1d42487",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "cb093533-922b-4eb1-9eb8-1c6e6c7837c8",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "02480823-8933-4197-89c5-e780b5e585e9",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "7cea5a08-f2e5-4610-9c90-d088215bbcf9",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "6b9f7816-0e80-4be7-bca1-e201fe40813d",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "48d4b766-c529-4356-91bc-fdcfb1b765f0",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "608b950a-ab69-4b8f-b38e-7eda4d80ba91",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "b3080d5a-33fd-4a47-943c-d5674eb1573f",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "7635cb34-6295-4b41-bb06-2adc809b50a6",
      "title": ""
    },
    {
      "from": "275ff269-e9c9-4d24-ba6b-bbc8603b46a7",
      "to": "9d2785ca-d069-4f01-99c2-a854e67bfb14",
      "title": ""
    }
  ],
  "courseId": "39"
}