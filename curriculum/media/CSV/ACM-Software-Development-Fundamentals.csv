courseid,chapterid,sectionid,unitid,subunitid,-,topic,-,chapter,-,Cognitive level,-,description_of_topic,-
14,,,,,,Software Development Fundamentals,,,-,,,,
14,1,,,,,Fundamental Programming Concepts and Practices,,Fundamental Programming Concepts and Practices,-,Create,,,
14,1,1,,,,Basic concepts ,,Fundamental Programming Concepts and Practices,-,Create,,"such as variables, primitive data types, expression evaluation, assignment, etc.",
14,1,2,,,,Basic constructs ,,Fundamental Programming Concepts and Practices,-,Create,,such as conditional and iterative structures and flow of control,
14,1,3,,,,Key modularity constructs ,,Fundamental Programming Concepts and Practices,-,Create,,"such as functions/methods and classes, and related concepts like parameter passing, scope, abstraction, data encapsulation, etc.",
14,1,4,,,,"Input and output using files, console, and APIs",,Fundamental Programming Concepts and Practices,-,Create,,"facilitating a wide range of software applications such as file processing, user interaction, and integration with web services.",
14,1,5,,,,Structured data types available in the chosen programming language like sequences,,Fundamental Programming Concepts and Practices,-,Create,," (e.g., arrays, lists), associative containers (e.g., dictionaries, maps), others (e.g., sets, tuples) and when and how to use them",
14,1,6,,,,Libraries and frameworks provided by the language ,,Fundamental Programming Concepts and Practices,-,Create,,(when/where applicable),
14,1,7,,,,Recursion,,Fundamental Programming Concepts and Practices,-,Create,,Solving problems by breaking them down into smaller instances of the same problem.,
14,1,8,,,,Dealing with runtime errors in programs ,,,-,,,(exception handling),
14,1,9,,,,"Basic concept of programming errors, testing, and debugging",,Fundamental Programming Concepts and Practices,-,Evaluate,,"involves identifying, preventing, and resolving issues in code through systematic testing, analysis, and refinement",
14,1,10,,,,Reading and understanding code,,Fundamental Programming Concepts and Practices,-,Apply,,"entails analyzing syntax, grasping logic and patterns, tracing execution, interpreting comments, referencing documentation, debugging, collaborating, and continuous learning.",
14,2,,,,,Fundamental Data Structures,,Fundamental Data Structures,-,,,,
14,2,1,,,,Standard abstract data types,,Fundamental Data Structures,-,Create,,"Lists, stacks, queues, sets, and maps/dictionaries provide fundamental ways to organize and manipulate data.",
14,2,2,,,,Strings and string processing,,Fundamental Data Structures,-,Create,,"Handling text data and performing operations such as searching, slicing, and concatenation.",
14,2,3,,,,When and how tuse standard data structures,,Fundamental Data Structures,-,Evaluate,,Understanding the appropriate use cases for each data structure based on their characteristics and functionalities.,
14,2,4,,,,Performance implications of choice of data structure(s) ,,Fundamental Data Structures,-,Evaluate,,"Considering factors like access time, insertion/deletion time, and memory usage to select the most suitable data structure for a given task.",
14,3,,,,,Algorithms,,Algorithms,-,,,"including sorting, searching, graph traversal, and optimization, with a focus on efficiency, correctness, and scalability.",
14,3,1,,,,Concept of algorithm and notion of algorithm efficiency,,Algorithms,-,Understand,,"Understanding algorithms as step-by-step procedures for solving problems, and assessing their efficiency in terms of time and space complexity.",
14,3,2,,,,Common algorithms,,Algorithms,-,Understand,,"like Sorting, Searching, Tree traversal, Graph traversal, etc.",
14,3,3,,,,Assessing the time/space efficiency of a algorithms through measurement,,Algorithms,-,Evaluate ,,"considering factors like runtime speed, memory consumption, and scalability.",
14,4,,,,,Software Development Practices,,Software Development Practices,-,,,"encompass methodologies, techniques, and principles aimed at efficiently producing high-quality software.",
14,4,1,,,,Programming style that improves readability,,Software Development Practices,-,Evaluate,,"enhances readability employs consistent formatting, meaningful variable names, concise comments, and modular code organization",
14,4,2,,,,Basic unit testing,,Software Development Practices,-,Create,,(using suitable frameworks) including test case design,
14,4,3,,,,Use of a general purpose IDE,,Software Development Practices,-,Apply ,,including its debugger (which can be alsused tstrengthen some programming concepts),